{"version":3,"file":"static/chunks/669.ae013552bbee7eb7.js","mappings":"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","sources":["webpack://_N_E/../ui-components/src/components/Page.tsx","webpack://_N_E/../ui-components/src/components/PageHeader.tsx","webpack://_N_E/../ui-core/src/runs/RunListTabs.tsx","webpack://_N_E/../ui-core/src/schedules/SchedulesNextTicks.tsx","webpack://_N_E/../ui-core/src/runs/ScheduledRunListRoot.tsx","webpack://_N_E/../ui-core/src/schedules/SchedulerInfo.tsx","webpack://_N_E/../ui-core/src/ui/AnchorButton.tsx","webpack://_N_E/../ui-core/src/ui/MenuLink.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Page = styled.div`\n  height: 100%;\n  overflow-y: auto;\n  padding-bottom: 64px;\n  width: 100%;\n`;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport {Box} from './Box';\nimport {Colors} from './Color';\nimport {IconName} from './Icon';\n\ninterface Props {\n  title: React.ReactNode;\n  tags?: React.ReactNode;\n  icon?: IconName;\n  description?: React.ReactNode;\n  metadata?: React.ReactNode;\n  right?: React.ReactNode;\n  tabs?: React.ReactNode;\n}\n\nexport const PageHeader = (props: Props) => {\n  const {title, tags, right, tabs} = props;\n  return (\n    <PageHeaderContainer\n      background={Colors.backgroundLight()}\n      padding={{top: 16, left: 24, right: 12}}\n      border=\"bottom\"\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}} padding={{bottom: 16}}>\n        <Box flex={{direction: 'row', alignItems: 'center', gap: 12, wrap: 'wrap'}}>\n          {title}\n          {tags}\n        </Box>\n        {right}\n      </Box>\n      {tabs}\n    </PageHeaderContainer>\n  );\n};\n\nconst PageHeaderContainer = styled(Box)`\n  width: 100%;\n\n  /**\n   * Blueprint breadcrumbs annoyingly have a built-in height.\n   */\n  .bp4-breadcrumbs {\n    height: auto;\n  }\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Colors, JoinedButtons, TokenizingFieldValue} from '@dagster-io/ui-components';\nimport isEqual from 'lodash/isEqual';\nimport {useMemo} from 'react';\nimport {useLocation} from 'react-router-dom';\nimport styled, {css} from 'styled-components';\n\nimport {failedStatuses, inProgressStatuses, queuedStatuses} from './RunStatuses';\nimport {runsPathWithFilters, useQueryPersistedRunFilters} from './RunsFilterInput';\nimport {RunTabsCountQuery, RunTabsCountQueryVariables} from './types/RunListTabs.types';\nimport {RunStatus, RunsFilter} from '../graphql/types';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {AnchorButton} from '../ui/AnchorButton';\n\nconst getDocumentTitle = (selected: ReturnType<typeof useSelectedRunsTab>) => {\n  switch (selected) {\n    case 'all':\n      return 'Runs | All runs';\n    case 'failed':\n      return 'Runs | Failed';\n    case 'in-progress':\n      return 'Runs | In progress';\n    case 'queued':\n      return 'Runs | Queued';\n    case 'scheduled':\n      return 'Runs | Scheduled';\n    default:\n      return 'Runs';\n  }\n};\n\nexport const useRunListTabs = (filter: RunsFilter = {}) => {\n  const queryResult = useQuery<RunTabsCountQuery, RunTabsCountQueryVariables>(\n    RUN_TABS_COUNT_QUERY,\n    {\n      variables: {\n        queuedFilter: {...filter, statuses: Array.from(queuedStatuses)},\n        inProgressFilter: {...filter, statuses: Array.from(inProgressStatuses)},\n      },\n    },\n  );\n\n  const {data: countData} = queryResult;\n  const {queuedCount, inProgressCount} = useMemo(() => {\n    return {\n      queuedCount:\n        countData?.queuedCount?.__typename === 'Runs' ? countData.queuedCount.count : null,\n      inProgressCount:\n        countData?.inProgressCount?.__typename === 'Runs' ? countData.inProgressCount.count : null,\n    };\n  }, [countData]);\n\n  const [filterTokens] = useQueryPersistedRunFilters();\n  const selectedTab = useSelectedRunsTab(filterTokens);\n\n  useDocumentTitle(getDocumentTitle(selectedTab));\n\n  const urlForStatus = (statuses: RunStatus[]) => {\n    const tokensMinusStatus = filterTokens.filter((token) => token.token !== 'status');\n    const statusTokens = statuses.map((status) => ({token: 'status' as const, value: status}));\n    return runsPathWithFilters([...statusTokens, ...tokensMinusStatus]);\n  };\n\n  const tabs = (\n    <JoinedButtons>\n      <ActivatableButton to={urlForStatus([])} id=\"all\" $active={selectedTab === 'all'}>\n        All runs\n      </ActivatableButton>\n      <ActivatableButton\n        to={urlForStatus(Array.from(queuedStatuses))}\n        id=\"queued\"\n        $active={selectedTab === 'queued'}\n      >\n        Queued ({queuedCount ?? 'indeterminate'})\n      </ActivatableButton>\n      <ActivatableButton\n        to={urlForStatus(Array.from(inProgressStatuses))}\n        id=\"in-progress\"\n        $active={selectedTab === 'in-progress'}\n      >\n        In progress ({inProgressCount ?? 'indeterminate'})\n      </ActivatableButton>\n      <ActivatableButton\n        to={urlForStatus(Array.from(failedStatuses))}\n        id=\"failed\"\n        $active={selectedTab === 'failed'}\n      >\n        Failed\n      </ActivatableButton>\n      <ActivatableButton\n        title=\"Scheduled\"\n        to=\"/runs/scheduled\"\n        id=\"scheduled\"\n        $active={selectedTab === 'scheduled'}\n      >\n        Scheduled\n      </ActivatableButton>\n    </JoinedButtons>\n  );\n\n  return {tabs, queryResult};\n};\n\nexport const ActivatableButton = styled(AnchorButton)<{$active: boolean}>`\n  color: ${Colors.textLight()};\n\n  &&:hover {\n    color: ${Colors.textLight()};\n  }\n\n  ${({$active}) =>\n    $active\n      ? css`\n          background-color: ${Colors.backgroundLighterHover()};\n          color: ${Colors.textDefault()};\n\n          &&:hover {\n            background-color: ${Colors.backgroundLighterHover()};\n            color: ${Colors.textDefault()};\n          }\n        `\n      : css`\n          background-color: ${Colors.backgroundDefault()};\n        `}\n`;\n\nexport const useSelectedRunsTab = (filterTokens: TokenizingFieldValue[]) => {\n  const {pathname} = useLocation();\n  if (pathname === '/runs/timeline') {\n    return 'timeline';\n  }\n  if (pathname === '/runs/scheduled') {\n    return 'scheduled';\n  }\n  if (pathname === '/overview/backfills') {\n    return 'backfills';\n  }\n\n  const statusTokens = new Set(\n    filterTokens.filter((token) => token.token === 'status').map((token) => token.value),\n  );\n  if (isEqual(queuedStatuses, statusTokens)) {\n    return 'queued';\n  }\n  if (isEqual(inProgressStatuses, statusTokens)) {\n    return 'in-progress';\n  }\n  if (isEqual(failedStatuses, statusTokens)) {\n    return 'failed';\n  }\n  return 'all';\n};\n\nexport const RUN_TABS_COUNT_QUERY = gql`\n  query RunTabsCountQuery($queuedFilter: RunsFilter!, $inProgressFilter: RunsFilter!) {\n    queuedCount: pipelineRunsOrError(filter: $queuedFilter) {\n      ... on Runs {\n        count\n      }\n    }\n    inProgressCount: pipelineRunsOrError(filter: $inProgressFilter) {\n      ... on Runs {\n        count\n      }\n    }\n  }\n`;\n","import {gql, useLazyQuery} from '@apollo/client';\nimport {\n  Box,\n  Button,\n  ButtonLink,\n  Colors,\n  Dialog,\n  DialogBody,\n  DialogFooter,\n  ExternalAnchorButton,\n  Group,\n  Icon,\n  Menu,\n  MenuItem,\n  NonIdealState,\n  Popover,\n  Spinner,\n  StyledRawCodeMirror,\n  Subheading,\n  Table,\n} from '@dagster-io/ui-components';\nimport qs from 'qs';\nimport {memo, useEffect, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {TimestampDisplay} from './TimestampDisplay';\nimport {\n  RepositoryForNextTicksFragment,\n  ScheduleFutureTickEvaluationResultFragment,\n  ScheduleFutureTickRunRequestFragment,\n  ScheduleNextFiveTicksFragment,\n  ScheduleTickConfigQuery,\n  ScheduleTickConfigQueryVariables,\n} from './types/SchedulesNextTicks.types';\nimport {showSharedToaster} from '../app/DomUtils';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {useCopyToClipboard} from '../app/browser';\nimport {InstigationStatus} from '../graphql/types';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {RunTags} from '../runs/RunTags';\nimport {MenuLink} from '../ui/MenuLink';\nimport {\n  findRepositoryAmongOptions,\n  isThisThingAJob,\n  useRepository,\n  useRepositoryOptions,\n} from '../workspace/WorkspaceContext';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\ninterface ScheduleTick {\n  schedule: ScheduleNextFiveTicksFragment;\n  timestamp: number;\n  repoAddress: RepoAddress;\n}\n\ninterface Props {\n  repos: RepositoryForNextTicksFragment[];\n}\n\nexport const SchedulesNextTicks = memo(({repos}: Props) => {\n  const nextTicks: ScheduleTick[] = [];\n  let anyPipelines = false;\n  let anySchedules = false;\n\n  const {options} = useRepositoryOptions();\n\n  repos.forEach((repo) => {\n    const {schedules} = repo;\n    anySchedules = anySchedules || schedules.length > 0;\n\n    const repoAddress = {\n      name: repo.name,\n      location: repo.location.name,\n    };\n\n    const futureTickSchedules = schedules.filter(\n      (schedule) =>\n        schedule.futureTicks.results.length &&\n        schedule.scheduleState.status === InstigationStatus.RUNNING,\n    );\n\n    const minMaxTimestamp = Math.min(\n      ...futureTickSchedules.map(\n        (schedule) =>\n          schedule.futureTicks.results[schedule.futureTicks.results.length - 1]!.timestamp!,\n      ),\n    );\n\n    futureTickSchedules.forEach((schedule) => {\n      schedule.futureTicks.results.forEach((tick) => {\n        if (tick.timestamp! <= minMaxTimestamp) {\n          nextTicks.push({schedule, timestamp: tick.timestamp!, repoAddress});\n        }\n      });\n    });\n\n    if (!anyPipelines) {\n      anyPipelines = schedules.some((schedule) => !!schedule.mode);\n    }\n  });\n\n  nextTicks.sort((a, b) => a.timestamp - b.timestamp);\n\n  if (!nextTicks.length) {\n    return (\n      <Box padding={{vertical: 32}}>\n        <NonIdealState\n          icon=\"error\"\n          title=\"No scheduled ticks\"\n          description={\n            anySchedules ? (\n              <>\n                There are no running schedules.{' '}\n                <Link to=\"/overview/schedules\">Start a schedule</Link> to see scheduled ticks.\n              </>\n            ) : (\n              <>\n                There are no schedules in this workspace. Create a running schedule to view its\n                scheduled ticks.\n              </>\n            )\n          }\n          action={\n            anySchedules ? null : (\n              <ExternalAnchorButton\n                icon={<Icon name=\"open_in_new\" />}\n                href=\"https://docs.dagster.io/concepts/partitions-schedules-sensors/schedules\"\n              >\n                View documentation\n              </ExternalAnchorButton>\n            )\n          }\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th style={{width: '260px'}}>Timestamp</th>\n          <th style={{width: '30%'}}>Schedule</th>\n          <th>{anyPipelines ? 'Job / Pipeline' : 'Job'}</th>\n          <th>Metadata</th>\n        </tr>\n      </thead>\n      <tbody>\n        {nextTicks.map(({schedule, timestamp, repoAddress}) => {\n          const repo = findRepositoryAmongOptions(options, repoAddress);\n          return (\n            <tr key={`${schedule.id}:${timestamp}`}>\n              <td>\n                <TimestampDisplay\n                  timestamp={timestamp}\n                  timezone={schedule.executionTimezone}\n                  timeFormat={{showSeconds: false, showTimezone: true}}\n                />\n              </td>\n              <td>\n                <Link to={workspacePathFromAddress(repoAddress, `/schedules/${schedule.name}`)}>\n                  {schedule.name}\n                </Link>\n              </td>\n              <td>\n                <PipelineReference\n                  pipelineName={schedule.pipelineName}\n                  pipelineHrefContext={repoAddress}\n                  isJob={!!repo && isThisThingAJob(repo, schedule.pipelineName)}\n                />\n              </td>\n              <td>\n                <NextTickMenu\n                  repoAddress={repoAddress}\n                  schedule={schedule}\n                  tickTimestamp={timestamp}\n                />\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n});\n\ninterface NextTickMenuProps {\n  repoAddress: RepoAddress;\n  schedule: ScheduleNextFiveTicksFragment;\n  tickTimestamp: number;\n}\n\nconst NextTickMenu = memo(({repoAddress, schedule, tickTimestamp}: NextTickMenuProps) => {\n  const scheduleSelector = {\n    ...repoAddressToSelector(repoAddress),\n    scheduleName: schedule.name,\n  };\n  const [isOpen, setOpen] = useState<boolean>(false);\n  const [loadTickConfig, {called, loading, data}] = useLazyQuery<\n    ScheduleTickConfigQuery,\n    ScheduleTickConfigQueryVariables\n  >(SCHEDULE_TICK_CONFIG_QUERY, {\n    variables: {\n      scheduleSelector,\n      tickTimestamp,\n    },\n  });\n\n  const infoReady = called ? !loading : false;\n  const evaluationResult =\n    data?.scheduleOrError?.__typename === 'Schedule'\n      ? data.scheduleOrError.futureTick.evaluationResult\n      : null;\n\n  const menuItems = infoReady ? (\n    <NextTickMenuItems\n      repoAddress={repoAddress}\n      schedule={schedule}\n      loading={loading}\n      onItemOpen={setOpen}\n      evaluationResult={evaluationResult}\n    />\n  ) : (\n    <Spinner purpose=\"body-text\" />\n  );\n  return (\n    <>\n      <Popover\n        content={<Menu>{menuItems}</Menu>}\n        position=\"bottom-right\"\n        onOpening={() => {\n          if (!called) {\n            loadTickConfig();\n          }\n        }}\n      >\n        <Button icon={<Icon name=\"expand_more\" />} />\n      </Popover>\n      <NextTickDialog\n        repoAddress={repoAddress}\n        isOpen={isOpen}\n        setOpen={setOpen}\n        schedule={schedule}\n        tickTimestamp={tickTimestamp}\n        evaluationResult={evaluationResult}\n      />\n    </>\n  );\n});\n\nconst NextTickMenuItems = ({\n  repoAddress,\n  schedule,\n  evaluationResult,\n  loading,\n  onItemOpen,\n}: {\n  repoAddress: RepoAddress;\n  evaluationResult: ScheduleFutureTickEvaluationResultFragment | null;\n  schedule: ScheduleNextFiveTicksFragment;\n  loading: boolean;\n  onItemOpen: (value: boolean) => void;\n}) => {\n  if (!evaluationResult) {\n    return <MenuItem text=\"Could not preview tick for this schedule\" />;\n  }\n\n  if (evaluationResult.skipReason) {\n    return <MenuItem text=\"View skip reason...\" onClick={() => onItemOpen(true)} />;\n  }\n\n  if (evaluationResult.error) {\n    return <MenuItem text=\"View error...\" onClick={() => onItemOpen(true)} />;\n  }\n\n  if (!evaluationResult.runRequests || !evaluationResult.runRequests.length) {\n    return <MenuItem text=\"No runs requested for this projected schedule tick\" />;\n  }\n\n  if (evaluationResult.runRequests.length === 1) {\n    const runRequest = evaluationResult.runRequests[0];\n    const runConfigYaml = runRequest ? runRequest.runConfigYaml : '';\n    return (\n      <>\n        <MenuItem\n          text={loading ? 'Loading Configuration...' : 'View Configuration...'}\n          icon=\"open_in_new\"\n          onClick={() => onItemOpen(true)}\n        />\n        <MenuLink\n          text=\"Open in Launchpad...\"\n          icon=\"edit\"\n          target=\"_blank\"\n          to={workspacePathFromAddress(\n            repoAddress,\n            `/pipeline_or_job/${schedule.pipelineName}/playground/setup?${qs.stringify({\n              mode: schedule.mode,\n              config: runConfigYaml,\n              solidSelection: schedule.solidSelection,\n            })}`,\n          )}\n        />\n      </>\n    );\n  }\n\n  return (\n    <MenuItem\n      text={`View ${evaluationResult.runRequests.length} run requests...`}\n      icon=\"edit\"\n      target=\"_blank\"\n      onClick={() => onItemOpen(true)}\n    />\n  );\n};\n\nconst NextTickDialog = ({\n  repoAddress,\n  evaluationResult,\n  schedule,\n  tickTimestamp,\n  setOpen,\n  isOpen,\n}: {\n  repoAddress: RepoAddress;\n  isOpen: boolean;\n  setOpen: (value: boolean) => void;\n  evaluationResult: ScheduleFutureTickEvaluationResultFragment | null;\n  schedule: ScheduleNextFiveTicksFragment;\n  tickTimestamp: number;\n}) => {\n  const [selectedRunRequest, setSelectedRunRequest] =\n    useState<ScheduleFutureTickRunRequestFragment | null>(\n      evaluationResult && evaluationResult.runRequests && evaluationResult.runRequests.length === 1\n        ? evaluationResult.runRequests[0]!\n        : null,\n    );\n\n  const copy = useCopyToClipboard();\n\n  const repo = useRepository(repoAddress);\n  const isJob = isThisThingAJob(repo, schedule.pipelineName);\n\n  useEffect(() => {\n    if (\n      evaluationResult &&\n      evaluationResult.runRequests &&\n      evaluationResult.runRequests.length === 1\n    ) {\n      setSelectedRunRequest(evaluationResult.runRequests[0]!);\n    }\n  }, [evaluationResult]);\n\n  const close = () => {\n    setSelectedRunRequest(null);\n    setOpen(false);\n  };\n\n  let body;\n  if (!evaluationResult) {\n    body = null;\n  } else if (selectedRunRequest) {\n    body = (\n      <Box flex={{direction: 'column', gap: 20}}>\n        <Box flex={{direction: 'column', gap: 12}} padding={{top: 16, horizontal: 24}}>\n          <Subheading>Tags</Subheading>\n          {selectedRunRequest.tags.length ? (\n            <RunTags tags={selectedRunRequest.tags} mode={isJob ? null : schedule.mode} />\n          ) : null}\n        </Box>\n        <div>\n          <Box border=\"bottom\" padding={{left: 24, bottom: 16}}>\n            <Subheading>Config</Subheading>\n          </Box>\n          <StyledRawCodeMirror\n            value={selectedRunRequest.runConfigYaml}\n            options={{readOnly: true, lineNumbers: true, mode: 'yaml'}}\n          />\n        </div>\n      </Box>\n    );\n  } else if (evaluationResult.error) {\n    body = (\n      <DialogBody>\n        <PythonErrorInfo error={evaluationResult.error} />\n      </DialogBody>\n    );\n  } else if (evaluationResult.skipReason) {\n    body = (\n      <DialogBody>\n        <SkipWrapper>{evaluationResult.skipReason}</SkipWrapper>\n      </DialogBody>\n    );\n  } else if (evaluationResult.runRequests) {\n    body = (\n      <DialogBody>\n        <RunRequestBody>\n          <Table>\n            <thead>\n              <tr>\n                <th>Run key</th>\n                <th>Config</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {evaluationResult.runRequests.map((runRequest, idx) => {\n                if (!runRequest) {\n                  return null;\n                }\n                return (\n                  <tr key={idx}>\n                    <td>{runRequest.runKey || <span>&mdash;</span>}</td>\n                    <td>\n                      <ButtonLink\n                        onClick={() => setSelectedRunRequest(runRequest)}\n                        underline={false}\n                      >\n                        <Group direction=\"row\" spacing={8} alignItems=\"center\">\n                          <Icon name=\"open_in_new\" color={Colors.textLight()} />\n                          <span>View config</span>\n                        </Group>\n                      </ButtonLink>\n                    </td>\n                    <td>\n                      <Popover\n                        content={\n                          <Menu>\n                            <MenuLink\n                              text=\"Open in Launchpad...\"\n                              icon=\"edit\"\n                              target=\"_blank\"\n                              to={workspacePathFromAddress(\n                                repoAddress,\n                                `/${isJob ? 'jobs' : 'pipelines'}/${\n                                  schedule.pipelineName\n                                }/playground/setup?${qs.stringify({\n                                  mode: schedule.mode,\n                                  config: runRequest.runConfigYaml,\n                                  solidSelection: schedule.solidSelection,\n                                })}`,\n                              )}\n                            />\n                          </Menu>\n                        }\n                        position=\"bottom\"\n                      >\n                        <Button icon={<Icon name=\"expand_more\" />} />\n                      </Popover>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </Table>\n        </RunRequestBody>\n      </DialogBody>\n    );\n  }\n\n  return (\n    <Dialog\n      onClose={() => close()}\n      style={{width: '50vw'}}\n      title={\n        <Box flex={{direction: 'row', gap: 4}}>\n          <TimestampDisplay timestamp={tickTimestamp} timezone={schedule.executionTimezone} />\n          {selectedRunRequest?.runKey ? <div>: {selectedRunRequest?.runKey}</div> : null}\n        </Box>\n      }\n      isOpen={isOpen}\n    >\n      {body}\n      <DialogFooter topBorder>\n        {selectedRunRequest ? (\n          <Button\n            autoFocus={false}\n            onClick={async () => {\n              copy(selectedRunRequest.runConfigYaml);\n              await showSharedToaster({\n                intent: 'success',\n                icon: 'copy_to_clipboard_done',\n                message: 'Copied!',\n              });\n            }}\n          >\n            Copy config\n          </Button>\n        ) : null}\n        <Button intent=\"primary\" autoFocus={true} onClick={() => close()}>\n          OK\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n};\n\nconst SCHEDULE_NEXT_FIVE_TICKS_FRAGMENT = gql`\n  fragment ScheduleNextFiveTicksFragment on Schedule {\n    id\n    name\n    executionTimezone\n    mode\n    solidSelection\n    pipelineName\n    scheduleState {\n      id\n      status\n    }\n    futureTicks(limit: 5) {\n      results {\n        timestamp\n      }\n    }\n  }\n`;\n\nexport const REPOSITORY_FOR_NEXT_TICKS_FRAGMENT = gql`\n  fragment RepositoryForNextTicksFragment on Repository {\n    name\n    id\n    location {\n      id\n      name\n    }\n    schedules {\n      id\n      ...ScheduleNextFiveTicksFragment\n    }\n  }\n\n  ${SCHEDULE_NEXT_FIVE_TICKS_FRAGMENT}\n`;\n\nconst SCHEDULE_TICK_CONFIG_QUERY = gql`\n  query ScheduleTickConfigQuery($scheduleSelector: ScheduleSelector!, $tickTimestamp: Int!) {\n    scheduleOrError(scheduleSelector: $scheduleSelector) {\n      ... on Schedule {\n        id\n        futureTick(tickTimestamp: $tickTimestamp) {\n          evaluationResult {\n            ...ScheduleFutureTickEvaluationResult\n          }\n        }\n      }\n    }\n  }\n\n  fragment ScheduleFutureTickEvaluationResult on TickEvaluation {\n    runRequests {\n      ...ScheduleFutureTickRunRequest\n    }\n    skipReason\n    error {\n      ...PythonErrorFragment\n    }\n  }\n\n  fragment ScheduleFutureTickRunRequest on RunRequest {\n    runKey\n    runConfigYaml\n    tags {\n      key\n      value\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst RunRequestBody = styled.div`\n  font-size: 13px;\n`;\n\nconst SkipWrapper = styled.div`\n  background-color: ${Colors.backgroundYellow()};\n  border: 1px solid ${Colors.accentYellow()};\n  border-radius: 3px;\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {\n  Alert,\n  Box,\n  ButtonLink,\n  Colors,\n  Group,\n  Heading,\n  Page,\n  PageHeader,\n} from '@dagster-io/ui-components';\n\nimport {useRunListTabs} from './RunListTabs';\nimport {\n  ScheduledRunsListQuery,\n  ScheduledRunsListQueryVariables,\n} from './types/ScheduledRunListRoot.types';\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {\n  FIFTEEN_SECONDS,\n  QueryRefreshCountdown,\n  useMergedRefresh,\n  useQueryRefreshAtInterval,\n} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {INSTANCE_HEALTH_FRAGMENT} from '../instance/InstanceHealthFragment';\nimport {SchedulerInfo} from '../schedules/SchedulerInfo';\nimport {\n  REPOSITORY_FOR_NEXT_TICKS_FRAGMENT,\n  SchedulesNextTicks,\n} from '../schedules/SchedulesNextTicks';\nimport {Loading} from '../ui/Loading';\n\nexport const ScheduledRunListRoot = () => {\n  useTrackPageView();\n  useDocumentTitle('Runs | Scheduled');\n\n  const queryResult = useQuery<ScheduledRunsListQuery, ScheduledRunsListQueryVariables>(\n    SCHEDULED_RUNS_LIST_QUERY,\n    {\n      notifyOnNetworkStatusChange: true,\n    },\n  );\n\n  const refreshState = useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n\n  const {tabs, queryResult: runQueryResult} = useRunListTabs();\n  const countRefreshState = useQueryRefreshAtInterval(runQueryResult, FIFTEEN_SECONDS);\n  const combinedRefreshState = useMergedRefresh(countRefreshState, refreshState);\n\n  return (\n    <Page>\n      <PageHeader\n        title={<Heading>Runs</Heading>}\n        right={<QueryRefreshCountdown refreshState={combinedRefreshState} />}\n      />\n      <Box\n        flex={{direction: 'row', gap: 8, alignItems: 'center', justifyContent: 'space-between'}}\n        padding={{vertical: 12, left: 24, right: 12}}\n      >\n        {tabs}\n      </Box>\n      <Loading queryResult={queryResult} allowStaleData>\n        {(result) => {\n          const {repositoriesOrError, instance} = result;\n          if (repositoriesOrError.__typename !== 'RepositoryConnection') {\n            const message =\n              repositoriesOrError.__typename === 'PythonError'\n                ? repositoriesOrError.message\n                : 'Repository not found';\n            return (\n              <Alert\n                intent=\"warning\"\n                title={\n                  <Group direction=\"row\" spacing={4}>\n                    <div>Could not load scheduled ticks.</div>\n                    <ButtonLink\n                      color={Colors.linkDefault()}\n                      underline=\"always\"\n                      onClick={() => {\n                        showCustomAlert({\n                          title: 'Python error',\n                          body: message,\n                        });\n                      }}\n                    >\n                      View error\n                    </ButtonLink>\n                  </Group>\n                }\n              />\n            );\n          }\n          return (\n            <>\n              <SchedulerInfo\n                daemonHealth={instance.daemonHealth}\n                padding={{vertical: 16, horizontal: 24}}\n              />\n              <SchedulesNextTicks repos={repositoriesOrError.nodes} />\n            </>\n          );\n        }}\n      </Loading>\n    </Page>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default ScheduledRunListRoot;\n\nconst SCHEDULED_RUNS_LIST_QUERY = gql`\n  query ScheduledRunsListQuery {\n    instance {\n      id\n      ...InstanceHealthFragment\n    }\n    repositoriesOrError {\n      ... on RepositoryConnection {\n        nodes {\n          id\n          ... on Repository {\n            id\n            ...RepositoryForNextTicksFragment\n          }\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${INSTANCE_HEALTH_FRAGMENT}\n  ${REPOSITORY_FOR_NEXT_TICKS_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {Alert, Box} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {DaemonHealthFragment} from '../instance/types/DaemonList.types';\n\ntype Props = React.ComponentPropsWithRef<typeof Box> & {\n  daemonHealth: DaemonHealthFragment | undefined;\n};\n\nexport const SchedulerInfo = ({daemonHealth, ...boxProps}: Props) => {\n  let healthy = undefined;\n\n  if (daemonHealth) {\n    const schedulerHealths = daemonHealth.allDaemonStatuses.filter(\n      (daemon) => daemon.daemonType === 'SCHEDULER',\n    );\n    if (schedulerHealths.length > 0) {\n      const schedulerHealth = schedulerHealths[0]!;\n      healthy = schedulerHealth.required && schedulerHealth.healthy;\n    }\n  }\n\n  if (healthy === false) {\n    return (\n      <Box {...boxProps}>\n        <Alert\n          intent=\"warning\"\n          title=\"The scheduler daemon is not running.\"\n          description={\n            <div>\n              See the{' '}\n              <a href=\"https://docs.dagster.io/deployment/dagster-daemon\">\n                dagster-daemon documentation\n              </a>{' '}\n              for more information on how to deploy the dagster-daemon process.\n            </div>\n          }\n        />\n      </Box>\n    );\n  }\n\n  return null;\n};\n","// eslint-disable-next-line no-restricted-imports\nimport {AnchorButton as BlueprintAnchorButton} from '@blueprintjs/core';\nimport {StyledButton, StyledButtonText, buildColorSet} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link, LinkProps} from 'react-router-dom';\n\ntype AnchorButtonProps = Omit<\n  React.ComponentProps<typeof BlueprintAnchorButton>,\n  'loading' | 'onClick' | 'onFocus' | 'type'\n> &\n  LinkProps & {\n    label?: React.ReactNode;\n  };\n\nexport const AnchorButton = React.forwardRef(\n  (props: AnchorButtonProps, ref: React.ForwardedRef<HTMLAnchorElement>) => {\n    const {children, icon, intent, outlined, rightIcon, ...rest} = props;\n\n    const {fillColor, fillColorHover, textColor, iconColor, strokeColor, strokeColorHover} =\n      React.useMemo(() => buildColorSet({intent, outlined}), [intent, outlined]);\n\n    return (\n      <StyledButton\n        {...rest}\n        as={Link}\n        $fillColor={fillColor}\n        $fillColorHover={fillColorHover}\n        $strokeColor={strokeColor}\n        $strokeColorHover={strokeColorHover}\n        $textColor={textColor}\n        $iconColor={iconColor}\n        ref={ref}\n      >\n        {icon || null}\n        {children ? <StyledButtonText>{children}</StyledButtonText> : null}\n        {rightIcon || null}\n      </StyledButton>\n    );\n  },\n);\n\nAnchorButton.displayName = 'AnchorButton';\n","// eslint-disable-next-line no-restricted-imports\nimport {\n  Box,\n  Colors,\n  CommonMenuItemProps,\n  IconWrapper,\n  MenuItem,\n  iconWithColor,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link, LinkProps} from 'react-router-dom';\nimport styled from 'styled-components';\n\ninterface MenuLinkProps\n  extends CommonMenuItemProps,\n    Omit<React.ComponentProps<typeof MenuItem>, 'icon' | 'onClick' | 'onFocus' | 'target'>,\n    LinkProps {}\n\n/**\n * If you want to use a menu item as a link, use `MenuLink` and provide a `to` prop.\n */\nexport const MenuLink = (props: MenuLinkProps) => {\n  const {icon, intent, text, disabled, ...rest} = props;\n\n  if (disabled) {\n    return <MenuItem disabled icon={icon} intent={intent} text={text} />;\n  }\n  return (\n    <StyledMenuLink {...rest}>\n      <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n        {iconWithColor(icon, intent)}\n        <div>{text}</div>\n      </Box>\n    </StyledMenuLink>\n  );\n};\n\nconst StyledMenuLink = styled(Link)`\n  text-decoration: none;\n\n  border-radius: 4px;\n  display: block;\n  line-height: 20px;\n  padding: 6px 8px 6px 12px;\n  transition:\n    background-color 50ms,\n    box-shadow 150ms;\n  align-items: flex-start;\n  user-select: none;\n\n  /**\n   * Use margin instead of align-items: center because the contents of the menu item may wrap \n   * in unusual circumstances.\n   */\n  ${IconWrapper} {\n    margin-top: 2px;\n  }\n\n  ${IconWrapper}:first-child {\n    margin-left: -4px;\n  }\n\n  &&&:link,\n  &&&:visited,\n  &&&:hover,\n  &&&:active {\n    color: ${Colors.textDefault()};\n    text-decoration: none;\n  }\n\n  &&&:hover {\n    background: ${Colors.backgroundLighter()};\n  }\n`;\n"],"names":["Page","styled","div","withConfig","PageHeader","props","title","tags","right","tabs","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsxs","PageHeaderContainer","background","Colors","padding","top","left","border","Box","flex","direction","justifyContent","bottom","alignItems","gap","wrap","getDocumentTitle","selected","useRunListTabs","filter","queryResult","useQuery","RUN_TABS_COUNT_QUERY","variables","queuedFilter","_swc_helpers_object_spread_props__WEBPACK_IMPORTED_MODULE_9__","_","_swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_10__","statuses","Array","from","queuedStatuses","inProgressFilter","inProgressStatuses","data","useMemo","countData","queuedCount","__typename","count","inProgressCount","filterTokens","useQueryPersistedRunFilters","selectedTab","useSelectedRunsTab","useDocumentTitle","urlForStatus","tokensMinusStatus","token","statusTokens","map","status","value","runsPathWithFilters","_swc_helpers_to_consumable_array__WEBPACK_IMPORTED_MODULE_12__","JoinedButtons","jsx","ActivatableButton","to","id","$active","failedStatuses","AnchorButton","param","css","pathname","useLocation","Set","isEqual","gql","SchedulesNextTicks","memo","repos","nextTicks","anyPipelines","anySchedules","options","useRepositoryOptions","forEach","repo","Math","schedules","length","repoAddress","name","location","futureTickSchedules","schedule","futureTicks","results","scheduleState","InstigationStatus","RUNNING","minMaxTimestamp","min","_to_consumable_array","timestamp","tick","push","some","mode","sort","a","b","jsx_runtime","Table","thead","tr","th","style","width","tbody","findRepositoryAmongOptions","td","TimestampDisplay","timezone","executionTimezone","timeFormat","showSeconds","showTimezone","Link","workspacePathFromAddress","concat","PipelineReference","pipelineName","pipelineHrefContext","isJob","isThisThingAJob","NextTickMenu","tickTimestamp","vertical","NonIdealState","icon","description","Fragment","action","ExternalAnchorButton","Icon","href","scheduleSelector","_object_spread_props","_object_spread","repoAddressToSelector","scheduleName","useState","isOpen","setOpen","useLazyQuery","SCHEDULE_TICK_CONFIG_QUERY","loadTickConfig","called","loading","evaluationResult","scheduleOrError","futureTick","menuItems","infoReady","NextTickMenuItems","onItemOpen","Spinner","purpose","Popover","content","Menu","position","onOpening","Button","NextTickDialog","MenuItem","text","skipReason","onClick","error","runRequests","runRequest","runConfigYaml","MenuLink","target","qs","config","solidSelection","body","selectedRunRequest","setSelectedRunRequest","copy","useCopyToClipboard","useRepository","useEffect","close","horizontal","Subheading","RunTags","StyledRawCodeMirror","readOnly","lineNumbers","DialogBody","PythonErrorInfo","SkipWrapper","RunRequestBody","idx","runKey","span","ButtonLink","underline","Group","spacing","color","Dialog","onClose","DialogFooter","topBorder","autoFocus","_async_to_generator","showSharedToaster","intent","message","_state","sent","SCHEDULE_NEXT_FIVE_TICKS_FRAGMENT","REPOSITORY_FOR_NEXT_TICKS_FRAGMENT","PYTHON_ERROR_FRAGMENT","ScheduledRunListRoot","useTrackPageView","SCHEDULED_RUNS_LIST_QUERY","notifyOnNetworkStatusChange","refreshState","useQueryRefreshAtInterval","FIFTEEN_SECONDS","countRefreshState","runQueryResult","combinedRefreshState","useMergedRefresh","Heading","QueryRefreshCountdown","Loading","allowStaleData","result","repositoriesOrError","instance","Alert","showCustomAlert","SchedulerInfo","daemonHealth","nodes","runs_ScheduledRunListRoot","INSTANCE_HEALTH_FRAGMENT","_param","boxProps","healthy","undefined","schedulerHealths","allDaemonStatuses","daemon","daemonType","schedulerHealth","required","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","React","ref","children","outlined","rightIcon","rest","buildColorSet","fillColor","fillColorHover","textColor","iconColor","strokeColor","strokeColorHover","StyledButton","as","$fillColor","$fillColorHover","$strokeColor","$strokeColorHover","$textColor","$iconColor","StyledButtonText","displayName","disabled","StyledMenuLink","iconWithColor","IconWrapper"],"sourceRoot":""}