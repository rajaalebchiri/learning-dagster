{"version":3,"file":"static/chunks/772.661bceb86a047c1f.js","mappings":"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","sources":["webpack://_N_E/../ui-components/src/components/PageHeader.tsx","webpack://_N_E/../ui-core/src/instance/flattenCodeLocationRows.tsx","webpack://_N_E/../ui-core/src/workspace/CodeLocationMenu.tsx","webpack://_N_E/../ui-core/src/workspace/RepositoryCountTags.tsx","webpack://_N_E/../ui-core/src/workspace/CodeLocationRowSet.tsx","webpack://_N_E/../ui-core/src/workspace/VirtualizedCodeLocationRow.tsx","webpack://_N_E/../ui-core/src/workspace/RepositoryLocationsList.tsx","webpack://_N_E/../ui-core/src/instance/CodeLocationsPage.tsx","webpack://_N_E/../ui-core/src/nav/InstanceWarningIcon.tsx","webpack://_N_E/../ui-core/src/nav/WorkspaceStatus.tsx","webpack://_N_E/../ui-core/src/instance/InstanceTabs.tsx","webpack://_N_E/../ui-core/src/instance/useCanSeeConfig.tsx","webpack://_N_E/../ui-core/src/workspace/ReloadAllButton.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\n\nimport {Box} from './Box';\nimport {Colors} from './Color';\nimport {IconName} from './Icon';\n\ninterface Props {\n  title: React.ReactNode;\n  tags?: React.ReactNode;\n  icon?: IconName;\n  description?: React.ReactNode;\n  metadata?: React.ReactNode;\n  right?: React.ReactNode;\n  tabs?: React.ReactNode;\n}\n\nexport const PageHeader = (props: Props) => {\n  const {title, tags, right, tabs} = props;\n  return (\n    <PageHeaderContainer\n      background={Colors.backgroundLight()}\n      padding={{top: 16, left: 24, right: 12}}\n      border=\"bottom\"\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}} padding={{bottom: 16}}>\n        <Box flex={{direction: 'row', alignItems: 'center', gap: 12, wrap: 'wrap'}}>\n          {title}\n          {tags}\n        </Box>\n        {right}\n      </Box>\n      {tabs}\n    </PageHeaderContainer>\n  );\n};\n\nconst PageHeaderContainer = styled(Box)`\n  width: 100%;\n\n  /**\n   * Blueprint breadcrumbs annoyingly have a built-in height.\n   */\n  .bp4-breadcrumbs {\n    height: auto;\n  }\n`;\n","import {CodeLocationRowType} from '../workspace/VirtualizedCodeLocationRow';\nimport {WorkspaceLocationNodeFragment} from '../workspace/types/WorkspaceContext.types';\n\nconst flatten = (locationEntries: WorkspaceLocationNodeFragment[]) => {\n  // Consider each loaded repository to be a \"code location\".\n  const all: CodeLocationRowType[] = [];\n  for (const locationNode of locationEntries) {\n    const {locationOrLoadError} = locationNode;\n    if (!locationOrLoadError || locationOrLoadError?.__typename === 'PythonError') {\n      all.push({type: 'error' as const, node: locationNode});\n    } else {\n      locationOrLoadError.repositories.forEach((repo) => {\n        all.push({type: 'repository' as const, codeLocation: locationNode, repository: repo});\n      });\n    }\n  }\n  return all;\n};\n\nconst filterBySearch = (flattened: CodeLocationRowType[], searchValue: string) => {\n  const queryString = searchValue.toLocaleLowerCase();\n  return flattened.filter((row) => {\n    if (row.type === 'error') {\n      return row.node.name.toLocaleLowerCase().includes(queryString);\n    }\n    return (\n      row.codeLocation.name.toLocaleLowerCase().includes(queryString) ||\n      row.repository.name.toLocaleLowerCase().includes(queryString)\n    );\n  });\n};\n\nexport const flattenCodeLocationRows = (\n  locationEntries: WorkspaceLocationNodeFragment[],\n  searchValue: string = '',\n) => {\n  const flattened = flatten(locationEntries);\n  const filtered = filterBySearch(flattened, searchValue);\n\n  return {\n    flattened,\n    filtered,\n  };\n};\n","import {\n  Button,\n  Dialog,\n  DialogFooter,\n  Icon,\n  Menu,\n  MenuItem,\n  Popover,\n  StyledRawCodeMirror,\n  Table,\n} from '@dagster-io/ui-components';\nimport {useMemo, useState} from 'react';\nimport * as yaml from 'yaml';\n\nimport {WorkspaceRepositoryLocationNode} from './WorkspaceContext';\n\nexport const CodeLocationMenu = ({\n  locationNode,\n}: {\n  locationNode: WorkspaceRepositoryLocationNode;\n}) => {\n  const [configIsOpen, setConfigIsOpen] = useState(false);\n  const [libsIsOpen, setLibsIsOpen] = useState(false);\n\n  let libsMenuItem = null;\n  let libsDialog = null;\n  if (\n    locationNode.locationOrLoadError?.__typename === 'RepositoryLocation' &&\n    locationNode.locationOrLoadError.dagsterLibraryVersions !== null\n  ) {\n    libsMenuItem = (\n      <MenuItem icon=\"info\" text=\"View Dagster libraries\" onClick={() => setLibsIsOpen(true)} />\n    );\n    libsDialog = (\n      <DagsterLibrariesDialog\n        libraries={locationNode.locationOrLoadError.dagsterLibraryVersions}\n        isOpen={libsIsOpen}\n        setIsOpen={setLibsIsOpen}\n      />\n    );\n  }\n\n  return (\n    <>\n      <Popover\n        position=\"bottom-left\"\n        content={\n          <Menu>\n            <MenuItem icon=\"info\" text=\"View configuration\" onClick={() => setConfigIsOpen(true)} />\n            {libsMenuItem}\n          </Menu>\n        }\n      >\n        <Button icon={<Icon name=\"expand_more\" />}></Button>\n      </Popover>\n      <CodeLocationConfigDialog\n        metadata={locationNode.displayMetadata}\n        isOpen={configIsOpen}\n        setIsOpen={setConfigIsOpen}\n      />\n      {libsDialog}\n    </>\n  );\n};\n\nexport const CodeLocationConfigDialog = ({\n  isOpen,\n  setIsOpen,\n  metadata,\n}: {\n  isOpen: boolean;\n  setIsOpen: (next: boolean) => void;\n  metadata: WorkspaceRepositoryLocationNode['displayMetadata'];\n}) => {\n  return (\n    <Dialog\n      title=\"Code location configuration\"\n      icon=\"info\"\n      isOpen={isOpen}\n      onClose={() => setIsOpen(false)}\n      style={{width: '600px'}}\n    >\n      <CodeLocationConfig displayMetadata={metadata} />\n      <DialogFooter topBorder>\n        <Button onClick={() => setIsOpen(false)} intent=\"primary\">\n          Done\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n};\n\nexport const DagsterLibrariesDialog = ({\n  isOpen,\n  setIsOpen,\n  libraries,\n}: {\n  isOpen: boolean;\n  setIsOpen: (next: boolean) => void;\n  libraries: {name: string; version: string}[];\n}) => {\n  return (\n    <Dialog\n      title=\"Dagster library versions\"\n      icon=\"info\"\n      isOpen={isOpen}\n      onClose={() => setIsOpen(false)}\n      style={{width: '600px'}}\n    >\n      <Table>\n        <thead>\n          <tr>\n            <th>Libray</th>\n            <th>Version</th>\n          </tr>\n        </thead>\n        <tbody>\n          {libraries.map((library) => (\n            <tr key={library.name}>\n              <td>{library.name}</td>\n              <td>{library.version}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <DialogFooter topBorder>\n        <Button onClick={() => setIsOpen(false)} intent=\"primary\">\n          Done\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n};\n\nconst CodeLocationConfig = ({\n  displayMetadata,\n}: {\n  displayMetadata: WorkspaceRepositoryLocationNode['displayMetadata'];\n}) => {\n  const yamlString = useMemo(() => {\n    const kvPairs = displayMetadata.reduce((accum, item) => {\n      return {...accum, [item.key]: item.value};\n    }, {});\n    return yaml.stringify(kvPairs);\n  }, [displayMetadata]);\n\n  return (\n    <StyledRawCodeMirror\n      value={yamlString}\n      options={{readOnly: true, lineNumbers: true, mode: 'yaml'}}\n      theme={['config-editor']}\n    />\n  );\n};\n","import {Box, Tag, Tooltip} from '@dagster-io/ui-components';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {DagsterRepoOption} from './WorkspaceContext';\nimport {RepoAddress} from './types';\nimport {workspacePathFromAddress} from './workspacePath';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\n\nexport const RepositoryCountTags = ({\n  repo,\n  repoAddress,\n}: {\n  repo: DagsterRepoOption['repository'];\n  repoAddress: RepoAddress;\n}) => {\n  const assetGroupCount = repo.assetGroups.length;\n  const jobCount = repo.pipelines.filter(({name}) => !isHiddenAssetGroupJob(name)).length;\n  const scheduleCount = repo.schedules.length;\n  const sensorCount = repo.sensors.length;\n\n  return (\n    <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n      <Tooltip\n        content={assetGroupCount === 1 ? '1 asset group' : `${assetGroupCount} asset groups`}\n        placement=\"top\"\n      >\n        <CountLink to={workspacePathFromAddress(repoAddress, '/assets')}>\n          <Tag interactive icon=\"asset_group\">\n            {assetGroupCount}\n          </Tag>\n        </CountLink>\n      </Tooltip>\n      <Tooltip content={jobCount === 1 ? '1 job' : `${jobCount} jobs`} placement=\"top\">\n        <CountLink to={workspacePathFromAddress(repoAddress, '/jobs')}>\n          <Tag interactive icon=\"job\">\n            {jobCount}\n          </Tag>\n        </CountLink>\n      </Tooltip>\n      <Tooltip\n        content={scheduleCount === 1 ? '1 schedule' : `${scheduleCount} schedules`}\n        placement=\"top\"\n      >\n        <CountLink to={workspacePathFromAddress(repoAddress, '/schedules')}>\n          <Tag interactive icon=\"schedule\">\n            {scheduleCount}\n          </Tag>\n        </CountLink>\n      </Tooltip>\n      <Tooltip content={sensorCount === 1 ? '1 sensor' : `${sensorCount} sensors`} placement=\"top\">\n        <CountLink to={workspacePathFromAddress(repoAddress, '/sensors')}>\n          <Tag interactive icon=\"sensors\">\n            {sensorCount}\n          </Tag>\n        </CountLink>\n      </Tooltip>\n    </Box>\n  );\n};\n\nconst CountLink = styled(Link)`\n  :hover,\n  :active {\n    outline: none;\n    text-decoration: none;\n  }\n`;\n","import {\n  Box,\n  Button,\n  ButtonLink,\n  Colors,\n  Icon,\n  JoinedButtons,\n  MiddleTruncate,\n  Tag,\n  Tooltip,\n} from '@dagster-io/ui-components';\nimport {useCallback, useMemo, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {CodeLocationMenu} from './CodeLocationMenu';\nimport {RepositoryCountTags} from './RepositoryCountTags';\nimport {RepositoryLocationNonBlockingErrorDialog} from './RepositoryLocationErrorDialog';\nimport {WorkspaceRepositoryLocationNode} from './WorkspaceContext';\nimport {buildRepoAddress} from './buildRepoAddress';\nimport {repoAddressAsHumanString} from './repoAddressAsString';\nimport {WorkspaceDisplayMetadataFragment} from './types/WorkspaceContext.types';\nimport {workspacePathFromAddress} from './workspacePath';\nimport {showSharedToaster} from '../app/DomUtils';\nimport {useCopyToClipboard} from '../app/browser';\nimport {\n  NO_RELOAD_PERMISSION_TEXT,\n  ReloadRepositoryLocationButton,\n} from '../nav/ReloadRepositoryLocationButton';\nimport {\n  buildReloadFnForLocation,\n  useRepositoryLocationReload,\n} from '../nav/useRepositoryLocationReload';\nimport {TimeFromNow} from '../ui/TimeFromNow';\n\ninterface Props {\n  locationNode: WorkspaceRepositoryLocationNode;\n}\n\nexport const CodeLocationRowSet = ({locationNode}: Props) => {\n  const {name, locationOrLoadError} = locationNode;\n\n  if (!locationOrLoadError || locationOrLoadError?.__typename === 'PythonError') {\n    return (\n      <tr>\n        <td style={{maxWidth: '400px', color: Colors.textLight()}}>\n          <MiddleTruncate text={name} />\n        </td>\n        <td>\n          <LocationStatus location={name} locationOrError={locationNode} />\n        </td>\n        <td style={{whiteSpace: 'nowrap'}}>\n          <TimeFromNow unixTimestamp={locationNode.updatedTimestamp} />\n        </td>\n        <td>{'\\u2013'}</td>\n        <td style={{width: '180px'}}>\n          <JoinedButtons>\n            <ReloadButton location={name} />\n            <CodeLocationMenu locationNode={locationNode} />\n          </JoinedButtons>\n        </td>\n      </tr>\n    );\n  }\n\n  const repositories = [...locationOrLoadError.repositories].sort((a, b) =>\n    a.name.localeCompare(b.name),\n  );\n\n  return (\n    <>\n      {repositories.map((repository) => {\n        const repoAddress = buildRepoAddress(repository.name, name);\n        const allMetadata = [...locationNode.displayMetadata, ...repository.displayMetadata];\n        return (\n          <tr key={repoAddressAsHumanString(repoAddress)}>\n            <td style={{maxWidth: '400px'}}>\n              <Box flex={{direction: 'column', gap: 4}}>\n                <div style={{fontWeight: 500}}>\n                  <Link to={workspacePathFromAddress(repoAddress)}>\n                    <MiddleTruncate text={repoAddressAsHumanString(repoAddress)} />\n                  </Link>\n                </div>\n                <ImageName metadata={allMetadata} />\n                <ModuleOrPackageOrFile metadata={allMetadata} />\n              </Box>\n            </td>\n            <td>\n              <LocationStatus location={repository.name} locationOrError={locationNode} />\n            </td>\n            <td style={{whiteSpace: 'nowrap'}}>\n              <TimeFromNow unixTimestamp={locationNode.updatedTimestamp} />\n            </td>\n            <td>\n              <RepositoryCountTags repo={repository} repoAddress={repoAddress} />\n            </td>\n            <td style={{width: '180px'}}>\n              <JoinedButtons>\n                <ReloadButton location={name} />\n                <CodeLocationMenu locationNode={locationNode} />\n              </JoinedButtons>\n            </td>\n          </tr>\n        );\n      })}\n    </>\n  );\n};\n\nexport const ImageName = ({metadata}: {metadata: WorkspaceDisplayMetadataFragment[]}) => {\n  const copy = useCopyToClipboard();\n  const imageKV = metadata.find(({key}) => key === 'image');\n  const value = imageKV?.value || '';\n\n  const onClick = useCallback(async () => {\n    copy(value);\n    await showSharedToaster({\n      intent: 'success',\n      icon: 'done',\n      message: 'Image string copied!',\n    });\n  }, [copy, value]);\n\n  if (imageKV) {\n    return (\n      <ImageNameBox flex={{direction: 'row', gap: 4}}>\n        <span style={{fontWeight: 500}}>image:</span>\n        <Tooltip content=\"Click to copy\" placement=\"top\" display=\"block\">\n          <button onClick={onClick}>\n            <MiddleTruncate text={imageKV.value} />\n          </button>\n        </Tooltip>\n      </ImageNameBox>\n    );\n  }\n  return null;\n};\n\nconst ImageNameBox = styled(Box)`\n  width: 100%;\n  color: ${Colors.textLight()};\n  font-size: 12px;\n\n  .bp4-popover2-target {\n    overflow: hidden;\n  }\n\n  button {\n    background: ${Colors.backgroundDefault()};\n    border: none;\n    color: ${Colors.textLight()};\n    cursor: pointer;\n    font-size: 12px;\n    overflow: hidden;\n    padding: 0;\n    margin: 0;\n    width: 100%;\n\n    :focus {\n      outline: none;\n    }\n  }\n`;\n\nexport const ModuleOrPackageOrFile = ({\n  metadata,\n}: {\n  metadata: WorkspaceDisplayMetadataFragment[];\n}) => {\n  const imageKV = metadata.find(\n    ({key}) => key === 'module_name' || key === 'package_name' || key === 'python_file',\n  );\n  if (imageKV) {\n    return (\n      <Box\n        flex={{direction: 'row', gap: 4}}\n        style={{width: '100%', color: Colors.textLight(), fontSize: 12}}\n      >\n        <span style={{fontWeight: 500}}>{imageKV.key}:</span>\n        <MiddleTruncate text={imageKV.value} />\n      </Box>\n    );\n  }\n  return null;\n};\n\nexport const LocationStatus = (props: {\n  location: string;\n  locationOrError: WorkspaceRepositoryLocationNode;\n}) => {\n  const {location, locationOrError} = props;\n  const [showDialog, setShowDialog] = useState(false);\n\n  const reloadFn = useMemo(() => buildReloadFnForLocation(location), [location]);\n  const {reloading, tryReload} = useRepositoryLocationReload({\n    scope: 'location',\n    reloadFn,\n  });\n\n  if (locationOrError.loadStatus === 'LOADING') {\n    if (locationOrError.locationOrLoadError) {\n      return (\n        <Tag minimal intent=\"primary\">\n          Updating...\n        </Tag>\n      );\n    } else {\n      return (\n        <Tag minimal intent=\"primary\">\n          Loading...\n        </Tag>\n      );\n    }\n  }\n\n  if (locationOrError.locationOrLoadError?.__typename === 'PythonError') {\n    return (\n      <>\n        <Box flex={{alignItems: 'center', gap: 12}}>\n          <Tag minimal intent=\"danger\">\n            Failed\n          </Tag>\n          <ButtonLink onClick={() => setShowDialog(true)}>\n            <span style={{fontSize: '14px'}}>View error</span>\n          </ButtonLink>\n        </Box>\n        <RepositoryLocationNonBlockingErrorDialog\n          location={location}\n          isOpen={showDialog}\n          error={locationOrError.locationOrLoadError}\n          reloading={reloading}\n          onDismiss={() => setShowDialog(false)}\n          onTryReload={() => tryReload()}\n        />\n      </>\n    );\n  }\n\n  return (\n    <Tag minimal intent=\"success\">\n      Loaded\n    </Tag>\n  );\n};\n\nexport const ReloadButton = ({location}: {location: string}) => {\n  return (\n    <ReloadRepositoryLocationButton\n      location={location}\n      ChildComponent={({reloading, tryReload, hasReloadPermission}) => {\n        return (\n          <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n            <Tooltip\n              content={hasReloadPermission ? '' : NO_RELOAD_PERMISSION_TEXT}\n              canShow={!hasReloadPermission}\n              useDisabledButtonTooltipFix\n            >\n              <Button\n                icon={<Icon name=\"refresh\" />}\n                disabled={!hasReloadPermission}\n                loading={reloading}\n                onClick={() => tryReload()}\n              >\n                Reload\n              </Button>\n            </Tooltip>\n          </Box>\n        );\n      }}\n    />\n  );\n};\n","import {Box, Colors, JoinedButtons, MiddleTruncate} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {CodeLocationMenu} from './CodeLocationMenu';\nimport {ImageName, LocationStatus, ModuleOrPackageOrFile, ReloadButton} from './CodeLocationRowSet';\nimport {RepositoryCountTags} from './RepositoryCountTags';\nimport {WorkspaceRepositoryLocationNode} from './WorkspaceContext';\nimport {buildRepoAddress} from './buildRepoAddress';\nimport {repoAddressAsHumanString} from './repoAddressAsString';\nimport {\n  WorkspaceLocationNodeFragment,\n  WorkspaceRepositoryFragment,\n} from './types/WorkspaceContext.types';\nimport {workspacePathFromAddress} from './workspacePath';\nimport {TimeFromNow} from '../ui/TimeFromNow';\nimport {HeaderCell, RowCell} from '../ui/VirtualizedTable';\n\nexport type CodeLocationRowType =\n  | {\n      type: 'repository';\n      codeLocation: WorkspaceLocationNodeFragment;\n      repository: WorkspaceRepositoryFragment;\n    }\n  | {type: 'error'; node: WorkspaceLocationNodeFragment};\n\nconst TEMPLATE_COLUMNS = '3fr 1fr 1fr 240px 160px';\n\ninterface ErrorRowProps {\n  locationNode: WorkspaceRepositoryLocationNode;\n  index: number;\n}\n\nexport const VirtualizedCodeLocationErrorRow = React.forwardRef(\n  (props: ErrorRowProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n    const {locationNode, index} = props;\n    const {name} = locationNode;\n    return (\n      <div ref={ref} data-index={index}>\n        <RowGrid border=\"bottom\">\n          <RowCell>\n            <MiddleTruncate text={name} />\n          </RowCell>\n          <RowCell>\n            <div>\n              <LocationStatus location={name} locationOrError={locationNode} />\n            </div>\n          </RowCell>\n          <RowCell>\n            <div style={{whiteSpace: 'nowrap'}}>\n              <TimeFromNow unixTimestamp={locationNode.updatedTimestamp} />\n            </div>\n          </RowCell>\n          <RowCell>{'\\u2013'}</RowCell>\n          <RowCell>\n            <JoinedButtons>\n              <ReloadButton location={name} />\n              <CodeLocationMenu locationNode={locationNode} />\n            </JoinedButtons>\n          </RowCell>\n        </RowGrid>\n      </div>\n    );\n  },\n);\n\ninterface Props {\n  codeLocation: WorkspaceRepositoryLocationNode;\n  repository: WorkspaceRepositoryFragment;\n  index: number;\n  // measure: (node: Element | null) => void;\n}\n\nexport const VirtualizedCodeLocationRow = React.forwardRef(\n  (props: Props, ref: React.ForwardedRef<HTMLDivElement>) => {\n    const {codeLocation, repository, index} = props;\n    const repoAddress = buildRepoAddress(repository.name, repository.location.name);\n\n    const allMetadata = [...codeLocation.displayMetadata, ...repository.displayMetadata];\n\n    return (\n      <div ref={ref} data-index={index}>\n        <RowGrid border=\"bottom\">\n          <RowCell>\n            <Box flex={{direction: 'column', gap: 4}}>\n              <div style={{fontWeight: 500}}>\n                <Link to={workspacePathFromAddress(repoAddress)}>\n                  <MiddleTruncate text={repoAddressAsHumanString(repoAddress)} />\n                </Link>\n              </div>\n              <ImageName metadata={allMetadata} />\n              <ModuleOrPackageOrFile metadata={allMetadata} />\n            </Box>\n          </RowCell>\n          <RowCell>\n            <div>\n              <LocationStatus location={repository.name} locationOrError={codeLocation} />\n            </div>\n          </RowCell>\n          <RowCell>\n            <div style={{whiteSpace: 'nowrap'}}>\n              <TimeFromNow unixTimestamp={codeLocation.updatedTimestamp} />\n            </div>\n          </RowCell>\n          <RowCell>\n            <RepositoryCountTags repo={repository} repoAddress={repoAddress} />\n          </RowCell>\n          <RowCell style={{alignItems: 'flex-end'}}>\n            <JoinedButtons>\n              <ReloadButton location={codeLocation.name} />\n              <CodeLocationMenu locationNode={codeLocation} />\n            </JoinedButtons>\n          </RowCell>\n        </RowGrid>\n      </div>\n    );\n  },\n);\n\nexport const VirtualizedCodeLocationHeader = () => {\n  return (\n    <Box\n      border=\"top-and-bottom\"\n      style={{\n        display: 'grid',\n        gridTemplateColumns: TEMPLATE_COLUMNS,\n        height: '32px',\n        fontSize: '12px',\n        color: Colors.textLight(),\n      }}\n    >\n      <HeaderCell>Name</HeaderCell>\n      <HeaderCell>Status</HeaderCell>\n      <HeaderCell>Updated</HeaderCell>\n      <HeaderCell>Definitions</HeaderCell>\n      <HeaderCell style={{textAlign: 'right'}}>Actions</HeaderCell>\n    </Box>\n  );\n};\n\nconst RowGrid = styled(Box)`\n  display: grid;\n  grid-template-columns: ${TEMPLATE_COLUMNS};\n`;\n","import {Box, NonIdealState, Spinner} from '@dagster-io/ui-components';\nimport {useVirtualizer} from '@tanstack/react-virtual';\nimport {useRef} from 'react';\n\nimport {\n  CodeLocationRowType,\n  VirtualizedCodeLocationErrorRow,\n  VirtualizedCodeLocationHeader,\n  VirtualizedCodeLocationRow,\n} from './VirtualizedCodeLocationRow';\nimport {Container, DynamicRowContainer, Inner} from '../ui/VirtualizedTable';\n\ninterface Props {\n  loading: boolean;\n  codeLocations: CodeLocationRowType[];\n  searchValue: string;\n}\n\nexport const RepositoryLocationsList = ({loading, codeLocations, searchValue}: Props) => {\n  const parentRef = useRef<HTMLDivElement>(null);\n\n  const virtualizer = useVirtualizer({\n    count: codeLocations.length,\n    getScrollElement: () => parentRef.current,\n    estimateSize: () => 64,\n    overscan: 10,\n  });\n\n  const totalHeight = virtualizer.getTotalSize();\n  const items = virtualizer.getVirtualItems();\n\n  if (loading && !codeLocations.length) {\n    return (\n      <Box flex={{gap: 8, alignItems: 'center'}} padding={{horizontal: 24}}>\n        <Spinner purpose=\"body-text\" />\n        <div>Loading…</div>\n      </Box>\n    );\n  }\n\n  if (!codeLocations.length) {\n    if (searchValue) {\n      return (\n        <Box padding={{vertical: 32}}>\n          <NonIdealState\n            icon=\"folder\"\n            title=\"No matching code locations\"\n            description={\n              <div>\n                No code locations were found for search query <strong>{searchValue}</strong>.\n              </div>\n            }\n          />\n        </Box>\n      );\n    }\n\n    return (\n      <Box padding={{vertical: 32}}>\n        <NonIdealState\n          icon=\"folder\"\n          title=\"No code locations\"\n          description=\"When you add a code location, your definitions will appear here.\"\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <VirtualizedCodeLocationHeader />\n      <Container ref={parentRef}>\n        <Inner $totalHeight={totalHeight}>\n          <DynamicRowContainer $start={items[0]?.start ?? 0}>\n            {items.map(({index, key}) => {\n              const row: CodeLocationRowType = codeLocations[index]!;\n              if (row.type === 'error') {\n                return (\n                  <VirtualizedCodeLocationErrorRow\n                    key={key}\n                    index={index}\n                    locationNode={row.node}\n                    ref={virtualizer.measureElement}\n                  />\n                );\n              }\n\n              return (\n                <VirtualizedCodeLocationRow\n                  key={key}\n                  index={index}\n                  codeLocation={row.codeLocation}\n                  repository={row.repository}\n                  ref={virtualizer.measureElement}\n                />\n              );\n            })}\n          </DynamicRowContainer>\n        </Inner>\n      </Container>\n    </>\n  );\n};\n","import {Box, Heading, PageHeader, Subheading, TextInput} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {InstanceTabs} from './InstanceTabs';\nimport {flattenCodeLocationRows} from './flattenCodeLocationRows';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {ReloadAllButton} from '../workspace/ReloadAllButton';\nimport {RepositoryLocationsList} from '../workspace/RepositoryLocationsList';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext';\n\nconst SEARCH_THRESHOLD = 10;\n\nexport const CodeLocationsPage = () => {\n  useTrackPageView();\n  useDocumentTitle('Code locations');\n\n  const {pageTitle} = React.useContext(InstancePageContext);\n  const {locationEntries, loading} = React.useContext(WorkspaceContext);\n\n  const [searchValue, setSearchValue] = React.useState('');\n\n  const onChangeSearch = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(e.target.value);\n  }, []);\n\n  const queryString = searchValue.toLocaleLowerCase();\n  const {flattened, filtered} = React.useMemo(() => {\n    return flattenCodeLocationRows(locationEntries, queryString);\n  }, [locationEntries, queryString]);\n\n  const entryCount = flattened.length;\n  const showSearch = entryCount > SEARCH_THRESHOLD;\n\n  const subheadingText = () => {\n    if (loading || !entryCount) {\n      return 'Code locations';\n    }\n\n    return entryCount === 1 ? '1 code location' : `${entryCount} code locations`;\n  };\n\n  return (\n    <Box flex={{direction: 'column'}} style={{height: '100%', overflow: 'hidden'}}>\n      <PageHeader title={<Heading>{pageTitle}</Heading>} tabs={<InstanceTabs tab=\"locations\" />} />\n      <Box\n        padding={{vertical: 16, horizontal: 24}}\n        flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'center'}}\n        style={{height: '64px'}}\n      >\n        {showSearch ? (\n          <TextInput\n            icon=\"search\"\n            value={searchValue}\n            onChange={onChangeSearch}\n            placeholder=\"Filter code locations by name…\"\n            style={{width: '400px'}}\n          />\n        ) : (\n          <Subheading id=\"repository-locations\">{subheadingText()}</Subheading>\n        )}\n        <Box flex={{direction: 'row', gap: 12, alignItems: 'center'}}>\n          {showSearch ? <div>{`${entryCount} code locations`}</div> : null}\n          <ReloadAllButton />\n        </Box>\n      </Box>\n      <RepositoryLocationsList\n        loading={loading}\n        codeLocations={filtered}\n        searchValue={searchValue}\n      />\n    </Box>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default CodeLocationsPage;\n","import {Colors, Icon} from '@dagster-io/ui-components';\nimport {memo, useContext} from 'react';\n\nimport {WarningTooltip} from './WarningTooltip';\nimport {DeploymentStatusContext} from '../instance/DeploymentStatusProvider';\n\nexport const InstanceWarningIcon = memo(() => {\n  const {daemons} = useContext(DeploymentStatusContext);\n\n  if (!daemons) {\n    return null;\n  }\n\n  return (\n    <WarningTooltip\n      content={daemons.content}\n      position=\"bottom\"\n      modifiers={{offset: {enabled: true, options: {offset: [0, 28]}}}}\n    >\n      <Icon name=\"warning\" color={Colors.accentYellow()} />\n    </WarningTooltip>\n  );\n});\n","import {Colors, Icon, Spinner, Tooltip} from '@dagster-io/ui-components';\nimport {memo, useContext} from 'react';\n\nimport {WarningTooltip} from './WarningTooltip';\nimport {DeploymentStatusContext} from '../instance/DeploymentStatusProvider';\n\nexport const WorkspaceStatus = memo(({placeholder}: {placeholder: boolean}) => {\n  const {codeLocations} = useContext(DeploymentStatusContext);\n\n  if (!codeLocations) {\n    return placeholder ? <div style={{width: '16px'}} /> : null;\n  }\n\n  if (codeLocations.type === 'spinner') {\n    return (\n      <Tooltip content={codeLocations.content} placement=\"bottom\">\n        <Spinner purpose=\"body-text\" fillColor={Colors.accentGray()} />\n      </Tooltip>\n    );\n  }\n\n  return (\n    <WarningTooltip\n      content={codeLocations.content}\n      position=\"bottom\"\n      modifiers={{offset: {enabled: true, options: {offset: [0, 28]}}}}\n    >\n      <Icon name=\"warning\" color={Colors.accentYellow()} />\n    </WarningTooltip>\n  );\n});\n","import {QueryResult} from '@apollo/client';\nimport {Box, Tabs} from '@dagster-io/ui-components';\nimport {useContext} from 'react';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {useCanSeeConfig} from './useCanSeeConfig';\nimport {QueryRefreshCountdown, QueryRefreshState} from '../app/QueryRefresh';\nimport {InstanceWarningIcon} from '../nav/InstanceWarningIcon';\nimport {WorkspaceStatus} from '../nav/WorkspaceStatus';\nimport {TabLink} from '../ui/TabLink';\n\ninterface Props<TData> {\n  refreshState?: QueryRefreshState;\n  queryData?: QueryResult<TData, any>;\n  tab: string;\n}\n\nexport const InstanceTabs = <TData extends Record<string, any>>(props: Props<TData>) => {\n  const {refreshState, tab} = props;\n\n  const {healthTitle} = useContext(InstancePageContext);\n  const canSeeConfig = useCanSeeConfig();\n\n  return (\n    <Box flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'flex-end'}}>\n      <Tabs selectedTabId={tab}>\n        <TabLink\n          id=\"locations\"\n          title=\"Code locations\"\n          to=\"/locations\"\n          icon={<WorkspaceStatus placeholder={false} />}\n        />\n        <TabLink id=\"health\" title={healthTitle} to=\"/health\" icon={<InstanceWarningIcon />} />\n        {canSeeConfig ? (\n          <TabLink id=\"concurrency\" title=\"Concurrency limits\" to=\"/concurrency\" />\n        ) : null}\n        {canSeeConfig ? <TabLink id=\"config\" title=\"Configuration\" to=\"/config\" /> : null}\n      </Tabs>\n      {refreshState ? (\n        <Box padding={{bottom: 8}}>\n          <QueryRefreshCountdown refreshState={refreshState} />\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n","import {gql, useQuery} from '@apollo/client';\n\nimport {\n  InstanceConfigHasInfoQuery,\n  InstanceConfigHasInfoQueryVariables,\n} from './types/useCanSeeConfig.types';\n\nexport const useCanSeeConfig = () => {\n  const {data} = useQuery<InstanceConfigHasInfoQuery, InstanceConfigHasInfoQueryVariables>(\n    INSTANCE_CONFIG_HAS_INFO,\n  );\n  return !!data?.instance.hasInfo;\n};\n\nconst INSTANCE_CONFIG_HAS_INFO = gql`\n  query InstanceConfigHasInfo {\n    instance {\n      id\n      hasInfo\n    }\n  }\n`;\n","import {Button, Dialog, DialogBody, DialogFooter, Icon, Tooltip} from '@dagster-io/ui-components';\nimport {useEffect, useState} from 'react';\n\nimport {RepositoryLocationErrorDialog} from './RepositoryLocationErrorDialog';\nimport {useUnscopedPermissions} from '../app/Permissions';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {\n  reloadFnForWorkspace,\n  useRepositoryLocationReload,\n} from '../nav/useRepositoryLocationReload';\n\nexport const ReloadAllButton = ({label = 'Reload all'}: {label?: string}) => {\n  const {\n    permissions: {canReloadWorkspace},\n    disabledReasons,\n  } = useUnscopedPermissions();\n  const {reloading, tryReload, error, errorLocationId} = useRepositoryLocationReload({\n    scope: 'workspace',\n    reloadFn: reloadFnForWorkspace,\n  });\n\n  const [isOpen, setIsOpen] = useState(!!error);\n  useEffect(() => setIsOpen(!!error), [error]);\n\n  if (!canReloadWorkspace) {\n    return (\n      <Tooltip content={disabledReasons.canReloadWorkspace}>\n        <Button outlined icon={<Icon name=\"refresh\" />} disabled>\n          {label}\n        </Button>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <>\n      <Button outlined onClick={tryReload} icon={<Icon name=\"refresh\" />} loading={reloading}>\n        {label}\n      </Button>\n      {errorLocationId ? (\n        <RepositoryLocationErrorDialog\n          error={error}\n          location={errorLocationId}\n          reloading={reloading}\n          onTryReload={tryReload}\n          onDismiss={() => setIsOpen(false)}\n          isOpen={isOpen}\n        />\n      ) : (\n        <Dialog\n          icon=\"error\"\n          title=\"Reload error\"\n          canEscapeKeyClose={false}\n          canOutsideClickClose={false}\n          style={{width: '90%'}}\n          isOpen={isOpen}\n        >\n          <DialogBody>{error && <PythonErrorInfo error={error} />}</DialogBody>\n          <DialogFooter>\n            <Button onClick={() => setIsOpen(false)}>Dismiss</Button>\n          </DialogFooter>\n        </Dialog>\n      )}\n    </>\n  );\n};\n"],"names":["PageHeader","props","title","tags","right","tabs","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsxs","PageHeaderContainer","background","Colors","padding","top","left","border","Box","flex","direction","justifyContent","bottom","alignItems","gap","wrap","styled","flatten","locationEntries","all","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","_loop","locationNode","value","locationOrLoadError","__typename","repositories","forEach","repo","push","type","codeLocation","repository","node","err","return","filterBySearch","flattened","searchValue","queryString","toLocaleLowerCase","filter","row","name","includes","flattenCodeLocationRows","filtered","CodeLocationMenu","param","useState","configIsOpen","setConfigIsOpen","libsIsOpen","setLibsIsOpen","libsMenuItem","libsDialog","dagsterLibraryVersions","jsx_runtime","jsx","MenuItem","icon","text","onClick","DagsterLibrariesDialog","libraries","isOpen","setIsOpen","Fragment","Popover","position","content","Menu","Button","Icon","CodeLocationConfigDialog","metadata","displayMetadata","Dialog","onClose","style","width","CodeLocationConfig","DialogFooter","topBorder","intent","Table","thead","tr","th","tbody","map","library","td","version","yamlString","useMemo","kvPairs","reduce","accum","item","_object_spread_props","_","_object_spread","_define_property","key","yaml","StyledRawCodeMirror","options","readOnly","lineNumbers","mode","theme","RepositoryCountTags","repoAddress","assetGroupCount","assetGroups","length","jobCount","pipelines","isHiddenAssetGroupJob","scheduleCount","schedules","sensorCount","sensors","Tooltip","concat","placement","CountLink","to","workspacePathFromAddress","Tag","interactive","Link","ImageName","copy","useCopyToClipboard","imageKV","find","useCallback","_async_to_generator","showSharedToaster","message","_state","sent","ImageNameBox","span","fontWeight","display","button","MiddleTruncate","ModuleOrPackageOrFile","color","fontSize","LocationStatus","locationOrError","location","showDialog","setShowDialog","reloadFn","buildReloadFnForLocation","useRepositoryLocationReload","scope","reloading","tryReload","loadStatus","minimal","ButtonLink","RepositoryLocationNonBlockingErrorDialog","error","onDismiss","onTryReload","ReloadButton","ReloadRepositoryLocationButton","ChildComponent","hasReloadPermission","NO_RELOAD_PERMISSION_TEXT","canShow","useDisabledButtonTooltipFix","disabled","loading","TEMPLATE_COLUMNS","VirtualizedCodeLocationErrorRow","React","ref","index","div","data-index","RowGrid","RowCell","whiteSpace","TimeFromNow","unixTimestamp","updatedTimestamp","JoinedButtons","VirtualizedCodeLocationRow","buildRepoAddress","allMetadata","esm_to_consumable_array","repoAddressAsHumanString","VirtualizedCodeLocationHeader","gridTemplateColumns","height","HeaderCell","textAlign","RepositoryLocationsList","items","codeLocations","parentRef","useRef","virtualizer","useVirtualizer","count","getScrollElement","current","estimateSize","overscan","totalHeight","getTotalSize","getVirtualItems","horizontal","Spinner","purpose","Container","Inner","$totalHeight","DynamicRowContainer","$start","start","measureElement","vertical","NonIdealState","description","strong","CodeLocationsPage","useTrackPageView","useDocumentTitle","pageTitle","InstancePageContext","WorkspaceContext","setSearchValue","onChangeSearch","e","target","entryCount","showSearch","overflow","Heading","InstanceTabs","tab","TextInput","onChange","placeholder","Subheading","id","ReloadAllButton","instance_CodeLocationsPage","InstanceWarningIcon","memo","daemons","useContext","DeploymentStatusContext","WarningTooltip","modifiers","offset","enabled","WorkspaceStatus","fillColor","refreshState","healthTitle","canSeeConfig","useCanSeeConfig","Tabs","selectedTabId","TabLink","QueryRefreshCountdown","data","useQuery","INSTANCE_CONFIG_HAS_INFO","instance","hasInfo","gql","label","_param_label","useUnscopedPermissions","permissions","canReloadWorkspace","disabledReasons","reloadFnForWorkspace","errorLocationId","useEffect","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","outlined","RepositoryLocationErrorDialog","canEscapeKeyClose","canOutsideClickClose","DialogBody","PythonErrorInfo"],"sourceRoot":""}