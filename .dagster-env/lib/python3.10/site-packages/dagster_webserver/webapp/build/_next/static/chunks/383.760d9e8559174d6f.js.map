{"version":3,"file":"static/chunks/383.760d9e8559174d6f.js","mappings":"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","sources":["webpack://_N_E/../ui-components/src/components/Page.tsx","webpack://_N_E/../ui-components/src/components/PageHeader.tsx","webpack://_N_E/../ui-core/src/hooks/useSelectionReducer.ts","webpack://_N_E/../ui-core/src/runs/AssetTagCollections.tsx","webpack://_N_E/../ui-core/src/runs/CreatedByTag.tsx","webpack://_N_E/../ui-core/src/runs/DeletionDialog.tsx","webpack://_N_E/../ui-core/src/runs/RunConfigDialog.tsx","webpack://_N_E/../ui-core/src/runs/ReexecutionDialog.tsx","webpack://_N_E/../ui-core/src/runs/RunActionsMenu.tsx","webpack://_N_E/../ui-core/src/runs/useTagPinning.tsx","webpack://_N_E/../ui-core/src/runs/RunRow.tsx","webpack://_N_E/../ui-core/src/runs/ShowAndHideRunTags.mp4","webpack://_N_E/../ui-core/src/runs/RunTable.tsx","webpack://_N_E/../ui-core/src/ui/AnchorButton.tsx","webpack://_N_E/../ui-core/src/ui/MenuLink.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Page = styled.div`\n  height: 100%;\n  overflow-y: auto;\n  padding-bottom: 64px;\n  width: 100%;\n`;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport {Box} from './Box';\nimport {Colors} from './Color';\nimport {IconName} from './Icon';\n\ninterface Props {\n  title: React.ReactNode;\n  tags?: React.ReactNode;\n  icon?: IconName;\n  description?: React.ReactNode;\n  metadata?: React.ReactNode;\n  right?: React.ReactNode;\n  tabs?: React.ReactNode;\n}\n\nexport const PageHeader = (props: Props) => {\n  const {title, tags, right, tabs} = props;\n  return (\n    <PageHeaderContainer\n      background={Colors.backgroundLight()}\n      padding={{top: 16, left: 24, right: 12}}\n      border=\"bottom\"\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}} padding={{bottom: 16}}>\n        <Box flex={{direction: 'row', alignItems: 'center', gap: 12, wrap: 'wrap'}}>\n          {title}\n          {tags}\n        </Box>\n        {right}\n      </Box>\n      {tabs}\n    </PageHeaderContainer>\n  );\n};\n\nconst PageHeaderContainer = styled(Box)`\n  width: 100%;\n\n  /**\n   * Blueprint breadcrumbs annoyingly have a built-in height.\n   */\n  .bp4-breadcrumbs {\n    height: auto;\n  }\n`;\n","import {useReducer} from 'react';\n\ntype State = {\n  checkedIds: Set<string>;\n  lastCheckedId: string | null;\n};\n\ntype Action =\n  | {type: 'toggle-one'; payload: {checked: boolean; id: string}}\n  | {\n      type: 'toggle-slice';\n      payload: {checked: boolean; id: string; allIds: string[]};\n    }\n  | {type: 'toggle-all'; payload: {checked: boolean; allIds: string[]}};\n\nconst reducer = (state: State, action: Action): State => {\n  const copy = new Set(Array.from(state.checkedIds));\n  switch (action.type) {\n    case 'toggle-one': {\n      const {checked, id} = action.payload;\n      checked ? copy.add(id) : copy.delete(id);\n      return {lastCheckedId: id, checkedIds: copy};\n    }\n\n    case 'toggle-slice': {\n      const {checked, id, allIds} = action.payload;\n      const {lastCheckedId} = state;\n\n      const indexOfLast = lastCheckedId ? allIds.indexOf(lastCheckedId) : -1;\n      const indexOfChecked = allIds.indexOf(id);\n      if (indexOfLast === -1 || indexOfChecked === -1) {\n        return state;\n      }\n\n      const [start, end] = [indexOfLast, indexOfChecked].sort();\n      allIds.slice(start, end! + 1).forEach((id) => {\n        checked ? copy.add(id) : copy.delete(id);\n      });\n\n      return {\n        lastCheckedId: id,\n        checkedIds: copy,\n      };\n    }\n\n    case 'toggle-all': {\n      const {checked, allIds} = action.payload;\n      return {\n        lastCheckedId: null,\n        checkedIds: checked ? new Set(allIds) : new Set(),\n      };\n    }\n  }\n};\n\nconst initialState: State = {\n  checkedIds: new Set(),\n  lastCheckedId: null,\n};\n\nexport function useSelectionReducer(allIds: string[]) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const onToggleFactory = (id: string) => (values: {checked: boolean; shiftKey: boolean}) => {\n    const {checked, shiftKey} = values;\n    if (shiftKey && state.lastCheckedId) {\n      dispatch({type: 'toggle-slice', payload: {checked, id, allIds}});\n    } else {\n      dispatch({type: 'toggle-one', payload: {checked, id}});\n    }\n  };\n\n  const onToggleAll = (checked: boolean) => {\n    dispatch({type: 'toggle-all', payload: {checked, allIds}});\n  };\n\n  return [state, {onToggleFactory, onToggleAll}] as const;\n}\n","import {\n  Box,\n  Button,\n  ButtonLink,\n  Colors,\n  Dialog,\n  DialogFooter,\n  Icon,\n  MiddleTruncate,\n  Tag,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {displayNameForAssetKey} from '../asset-graph/Utils';\nimport {\n  assetDetailsPathForAssetCheck,\n  assetDetailsPathForKey,\n} from '../assets/assetDetailsPathForKey';\nimport {globalAssetGraphPathForAssetsAndDescendants} from '../assets/globalAssetGraphPathToString';\nimport {AssetKey} from '../assets/types';\nimport {TagActionsPopover} from '../ui/TagActions';\nimport {VirtualizedItemListForDialog} from '../ui/VirtualizedItemListForDialog';\n\nconst renderItemAssetKey = (assetKey: AssetKey) => (\n  <Link to={assetDetailsPathForKey(assetKey)} style={{display: 'block', width: '100%'}}>\n    <MiddleTruncate text={displayNameForAssetKey(assetKey)} />\n  </Link>\n);\n\nconst renderItemAssetCheck = (assetCheck: Check) => (\n  <Link to={assetDetailsPathForAssetCheck(assetCheck)} style={{display: 'block', width: '100%'}}>\n    <MiddleTruncate text={labelForAssetCheck(assetCheck)} />\n  </Link>\n);\n\nconst labelForAssetCheck = (check: Check) => {\n  return `${check.name} on ${displayNameForAssetKey(check.assetKey)}`;\n};\n\nfunction useShowMoreDialog<T>(\n  dialogTitle: string,\n  items: T[] | null,\n  renderItem: (item: T) => React.ReactNode,\n) {\n  const [showMore, setShowMore] = React.useState(false);\n\n  const dialog =\n    !!items && items.length > 1 ? (\n      <Dialog\n        title={dialogTitle}\n        onClose={() => setShowMore(false)}\n        style={{minWidth: '400px', width: '50vw', maxWidth: '800px', maxHeight: '70vh'}}\n        isOpen={showMore}\n      >\n        <div style={{height: '500px', overflow: 'hidden'}}>\n          <VirtualizedItemListForDialog items={items} renderItem={renderItem} />\n        </div>\n        <DialogFooter topBorder>\n          <Button intent=\"primary\" autoFocus onClick={() => setShowMore(false)}>\n            Done\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    ) : undefined;\n\n  return {dialog, showMore, setShowMore};\n}\n\ninterface AssetKeyTagCollectionProps {\n  assetKeys: AssetKey[] | null;\n  dialogTitle?: string;\n  useTags?: boolean;\n}\n\nexport const AssetKeyTagCollection = React.memo((props: AssetKeyTagCollectionProps) => {\n  const {assetKeys, useTags, dialogTitle = 'Assets in run'} = props;\n  const {setShowMore, dialog} = useShowMoreDialog(dialogTitle, assetKeys, renderItemAssetKey);\n\n  if (!assetKeys || !assetKeys.length) {\n    return null;\n  }\n\n  if (assetKeys.length === 1) {\n    // Outer span ensures the popover target is in the right place if the\n    // parent is a flexbox.\n    const assetKey = assetKeys[0]!;\n    return (\n      <span style={useTags ? {} : {marginBottom: -4}}>\n        <TagActionsPopover\n          data={{key: '', value: ''}}\n          actions={[\n            {\n              label: 'View asset',\n              to: assetDetailsPathForKey(assetKey),\n            },\n            {\n              label: 'View downstream lineage',\n              to: assetDetailsPathForKey(assetKey, {\n                view: 'lineage',\n                lineageScope: 'downstream',\n              }),\n            },\n          ]}\n        >\n          {useTags ? (\n            <Tag intent=\"none\" interactive icon=\"asset\">\n              {displayNameForAssetKey(assetKey)}\n            </Tag>\n          ) : (\n            <Link to={assetDetailsPathForKey(assetKey)}>\n              <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n                <Icon color={Colors.accentGray()} name=\"asset\" size={16} />\n                {displayNameForAssetKey(assetKey)}\n              </Box>\n            </Link>\n          )}\n        </TagActionsPopover>\n      </span>\n    );\n  }\n\n  return (\n    <span style={useTags ? {} : {marginBottom: -4}}>\n      <TagActionsPopover\n        data={{key: '', value: ''}}\n        actions={[\n          {\n            label: 'View list',\n            onClick: () => setShowMore(true),\n          },\n          {\n            label: 'View downstream lineage',\n            to: globalAssetGraphPathForAssetsAndDescendants(assetKeys),\n          },\n        ]}\n      >\n        {useTags ? (\n          <Tag intent=\"none\" icon=\"asset\">\n            {assetKeys.length} assets\n          </Tag>\n        ) : (\n          <ButtonLink onClick={() => setShowMore(true)} underline=\"hover\">\n            <Box flex={{direction: 'row', gap: 8, alignItems: 'center', display: 'inline-flex'}}>\n              <Icon color={Colors.accentGray()} name=\"asset\" size={16} />\n              {`${assetKeys.length} assets`}\n            </Box>\n          </ButtonLink>\n        )}\n      </TagActionsPopover>\n      {dialog}\n    </span>\n  );\n});\n\ntype Check = {name: string; assetKey: AssetKey};\n\ninterface AssetCheckTagCollectionProps {\n  assetChecks: Check[] | null;\n  dialogTitle?: string;\n  useTags?: boolean;\n}\n\nexport const AssetCheckTagCollection = React.memo((props: AssetCheckTagCollectionProps) => {\n  const {assetChecks, useTags, dialogTitle = 'Asset checks in run'} = props;\n  const {setShowMore, dialog} = useShowMoreDialog(dialogTitle, assetChecks, renderItemAssetCheck);\n\n  if (!assetChecks || !assetChecks.length) {\n    return null;\n  }\n\n  if (assetChecks.length === 1) {\n    // Outer span ensures the popover target is in the right place if the\n    // parent is a flexbox.\n    const check = assetChecks[0]!;\n    return (\n      <span style={useTags ? {} : {marginBottom: -4}}>\n        <TagActionsPopover\n          data={{key: '', value: ''}}\n          actions={[{label: 'View asset check', to: assetDetailsPathForAssetCheck(check)}]}\n        >\n          {useTags ? (\n            <Tag intent=\"none\" interactive icon=\"asset_check\">\n              {labelForAssetCheck(check)}\n            </Tag>\n          ) : (\n            <Link to={assetDetailsPathForAssetCheck(check)}>\n              <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n                <Icon color={Colors.accentGray()} name=\"asset_check\" size={16} />\n                {labelForAssetCheck(check)}\n              </Box>\n            </Link>\n          )}\n        </TagActionsPopover>\n      </span>\n    );\n  }\n\n  return (\n    <span style={useTags ? {} : {marginBottom: -4}}>\n      <TagActionsPopover\n        data={{key: '', value: ''}}\n        actions={[\n          {\n            label: 'View list',\n            onClick: () => setShowMore(true),\n          },\n        ]}\n      >\n        {useTags ? (\n          <Tag intent=\"none\" icon=\"asset_check\">\n            {assetChecks.length} asset checks\n          </Tag>\n        ) : (\n          <ButtonLink onClick={() => setShowMore(true)} underline=\"hover\">\n            <Box flex={{direction: 'row', gap: 8, alignItems: 'center', display: 'inline-flex'}}>\n              <Icon color={Colors.accentGray()} name=\"asset_check\" size={16} />\n              {`${assetChecks.length} asset checks`}\n            </Box>\n          </ButtonLink>\n        )}\n      </TagActionsPopover>\n      {dialog}\n    </span>\n  );\n});\n","import {Box, Tag} from '@dagster-io/ui-components';\nimport {memo} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {DagsterTag} from './RunTag';\nimport {RunFilterToken} from './RunsFilterInput';\nimport {RunTagsFragment} from './types/RunTable.types';\nimport {useLaunchPadHooks} from '../launchpad/LaunchpadHooksContext';\nimport {TagActionsPopover} from '../ui/TagActions';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\ntype Props = {\n  repoAddress?: RepoAddress | null;\n  tags: RunTagsFragment[];\n  onAddTag?: (token: RunFilterToken) => void;\n};\n\nexport const CreatedByTagCell = memo(({repoAddress, tags, onAddTag}: Props) => {\n  return (\n    <Box flex={{direction: 'column', alignItems: 'flex-start'}}>\n      <CreatedByTag repoAddress={repoAddress} tags={tags} onAddTag={onAddTag} />\n    </Box>\n  );\n});\n\ntype TagType =\n  | {\n      type: 'user' | 'schedule' | 'sensor' | 'auto-materialize' | 'auto-observe';\n      tag: RunTagsFragment;\n    }\n  | {type: 'manual'};\n\nconst pluckTagFromList = (tags: RunTagsFragment[]): TagType => {\n  // Prefer user/schedule/sensor\n  for (const tag of tags) {\n    const {key} = tag;\n    switch (key) {\n      case DagsterTag.User:\n        return {type: 'user', tag};\n      case DagsterTag.ScheduleName:\n        return {type: 'schedule', tag};\n      case DagsterTag.SensorName:\n        return {type: 'sensor', tag};\n    }\n  }\n\n  // If none of those, check for AMP\n  for (const tag of tags) {\n    const {key} = tag;\n    switch (key) {\n      case DagsterTag.Automaterialize:\n        return {type: 'auto-materialize', tag};\n      case DagsterTag.CreatedBy: {\n        // Backwards compatibility\n        if (tag.value === 'auto_materialize') {\n          return {type: 'auto-materialize', tag};\n        } else {\n          continue;\n        }\n      }\n      case DagsterTag.AutoObserve:\n        return {type: 'auto-observe', tag};\n    }\n  }\n\n  return {type: 'manual'};\n};\n\nexport const CreatedByTag = ({repoAddress, tags, onAddTag}: Props) => {\n  const {UserDisplay} = useLaunchPadHooks();\n\n  const plucked = pluckTagFromList(tags);\n\n  if (plucked.type === 'manual') {\n    return <Tag icon=\"account_circle\">Manually launched</Tag>;\n  }\n\n  const buildTagElement = () => {\n    const {type, tag} = plucked;\n    const {value} = tag;\n    switch (type) {\n      case 'user':\n        return <UserDisplay email={tag.value} />;\n      case 'schedule': {\n        return (\n          <Tag icon=\"schedule\">\n            {repoAddress ? (\n              <Link to={workspacePathFromAddress(repoAddress, `/schedules/${value}`)}>{value}</Link>\n            ) : (\n              value\n            )}\n          </Tag>\n        );\n      }\n      case 'sensor': {\n        return (\n          <Tag icon=\"sensors\">\n            {repoAddress ? (\n              <Link to={workspacePathFromAddress(repoAddress, `/sensors/${value}`)}>{value}</Link>\n            ) : (\n              value\n            )}\n          </Tag>\n        );\n      }\n      case 'auto-materialize':\n        return <Tag icon=\"auto_materialize_policy\">Auto-materialize policy</Tag>;\n      case 'auto-observe':\n        return <Tag icon=\"auto_observe\">Auto-observation</Tag>;\n    }\n  };\n\n  const tagElement = buildTagElement();\n  if (!onAddTag) {\n    return tagElement;\n  }\n\n  const {tag} = plucked;\n  const {key, value} = tag;\n  return (\n    <TagActionsPopover\n      data={tag}\n      actions={[\n        {\n          label: 'Add to filter',\n          onClick: () => onAddTag({token: 'tag', value: `${key}=${value}`}),\n        },\n      ]}\n    >\n      {tagElement}\n    </TagActionsPopover>\n  );\n};\n","import {useMutation} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {ProgressBar} from '@blueprintjs/core';\nimport {\n  Button,\n  Colors,\n  Dialog,\n  DialogBody,\n  DialogFooter,\n  Group,\n  Icon,\n  Mono,\n} from '@dagster-io/ui-components';\nimport {useEffect, useReducer, useRef} from 'react';\n\nimport {NavigationBlock} from './NavigationBlock';\nimport {DELETE_MUTATION} from './RunUtils';\nimport {DeleteMutation, DeleteMutationVariables} from './types/RunUtils.types';\n\nexport interface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: () => void;\n  onTerminateInstead: () => void;\n  selectedRuns: SelectedRuns;\n}\n\ntype SelectedRuns = {[id: string]: boolean};\n\nconst refineToError = (data: DeleteMutation | null | undefined) => {\n  if (data?.deletePipelineRun.__typename === 'DeletePipelineRunSuccess') {\n    throw new Error('Not an error!');\n  }\n  return data?.deletePipelineRun;\n};\n\ntype Error = ReturnType<typeof refineToError>;\n\ntype DeletionDialogState = {\n  step: 'initial' | 'deleting' | 'completed';\n  frozenRuns: SelectedRuns;\n  deletion: {completed: number; errors: {[id: string]: Error}};\n};\n\ntype DeletionDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'start'}\n  | {type: 'deletion-success'}\n  | {type: 'deletion-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst initializeState = (frozenRuns: SelectedRuns): DeletionDialogState => {\n  return {\n    step: 'initial',\n    frozenRuns,\n    deletion: {completed: 0, errors: {}},\n  };\n};\n\nconst deletionDialogReducer = (\n  prevState: DeletionDialogState,\n  action: DeletionDialogAction,\n): DeletionDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'start':\n      return {...prevState, step: 'deleting'};\n    case 'deletion-success': {\n      const {deletion} = prevState;\n      return {\n        ...prevState,\n        step: 'deleting',\n        deletion: {...deletion, completed: deletion.completed + 1},\n      };\n    }\n    case 'deletion-error': {\n      const {deletion} = prevState;\n      return {\n        ...prevState,\n        step: 'deleting',\n        deletion: {\n          ...deletion,\n          completed: deletion.completed + 1,\n          errors: {...deletion.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const DeletionDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, onTerminateInstead, selectedRuns} = props;\n  const frozenRuns = useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = useReducer(deletionDialogReducer, frozenRuns.current, initializeState);\n\n  const runIDs = Object.keys(state.frozenRuns);\n  const count = runIDs.length;\n  const terminatableCount = runIDs.filter((id) => state.frozenRuns[id]).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [destroy] = useMutation<DeleteMutation, DeleteMutationVariables>(DELETE_MUTATION);\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (const runId of runList) {\n      const {data} = await destroy({variables: {runId}});\n\n      if (data?.deletePipelineRun.__typename === 'DeletePipelineRunSuccess') {\n        dispatch({type: 'deletion-success'});\n      } else {\n        dispatch({type: 'deletion-error', id: runId, error: refineToError(data)});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete();\n  };\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>{`${count} ${count === 1 ? 'run' : 'runs'} will be deleted.`}</div>\n            <div>\n              Deleting runs will not prevent them from continuing to execute, and may result in\n              unexpected behavior.\n            </div>\n            {terminatableCount ? (\n              <div>\n                {terminatableCount > 1 ? (\n                  <>\n                    {`${terminatableCount} of these runs can be terminated. `}\n                    <strong>\n                      Please consider terminating these runs instead of deleting them.\n                    </strong>\n                  </>\n                ) : (\n                  <>\n                    {`1 run can be terminated instead. `}\n                    <strong>Please consider terminating this run instead of deleting it.</strong>\n                  </>\n                )}\n              </div>\n            ) : null}\n            <div>Do you wish to continue with deletion?</div>\n          </Group>\n        );\n      case 'deleting':\n      case 'completed':\n        const value = count > 0 ? state.deletion.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>Deleting…</div>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'deleting' ? (\n              <NavigationBlock message=\"Deletion in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"danger\" onClick={mutate}>\n              {`Yes, delete ${`${count} ${count === 1 ? 'run' : 'runs'}`}`}\n            </Button>\n            {terminatableCount ? (\n              <Button intent=\"primary\" onClick={onTerminateInstead}>\n                {`Terminate ${`${terminatableCount} ${\n                  terminatableCount === 1 ? 'run' : 'runs'\n                }`} instead`}\n              </Button>\n            ) : null}\n          </>\n        );\n      case 'deleting':\n        return (\n          <Button intent=\"danger\" disabled>\n            Deleting…\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'deleting') {\n      return <div>Please do not close the window or navigate away during deletion.</div>;\n    }\n\n    const errors = state.deletion.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.deletion.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"center\">\n            <Icon name=\"check_circle\" color={Colors.accentGreen()} />\n            <div>{`Successfully deleted ${successCount} ${\n              successCount === 1 ? 'run' : 'runs'\n            }.`}</div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"center\">\n              <Icon name=\"warning\" color={Colors.accentYellow()} />\n              <div>{`Could not delete ${errorCount} ${errorCount === 1 ? 'run' : 'runs'}.`}</div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8}>\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errors[runId]?.message}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'deleting';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title=\"Delete runs\"\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      onClose={onClose}\n    >\n      <DialogBody>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </DialogBody>\n      <DialogFooter>{buttons()}</DialogFooter>\n    </Dialog>\n  );\n};\n","import {\n  Box,\n  Button,\n  Dialog,\n  DialogFooter,\n  StyledRawCodeMirror,\n  Subheading,\n} from '@dagster-io/ui-components';\nimport styled from 'styled-components';\n\nimport {RunTags} from './RunTags';\nimport {RunTagsFragment} from './types/RunTable.types';\n\ninterface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  copyConfig: () => void;\n  runConfigYaml: string;\n  mode: string | null;\n  isJob: boolean;\n\n  // Optionally provide tags to display them as well.\n  tags?: RunTagsFragment[];\n}\n\nexport const RunConfigDialog = (props: Props) => {\n  const {isOpen, onClose, copyConfig, runConfigYaml, tags, mode, isJob} = props;\n  const hasTags = !!tags && tags.length > 0;\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      onClose={onClose}\n      canOutsideClickClose\n      canEscapeKeyClose\n      style={{\n        width: '90vw',\n        maxWidth: '1000px',\n        minWidth: '600px',\n        height: '90vh',\n        maxHeight: '1000px',\n        minHeight: '600px',\n      }}\n      title=\"Run configuration\"\n    >\n      <Box flex={{direction: 'column'}} style={{flex: 1, overflow: 'hidden'}}>\n        <Box flex={{direction: 'column', gap: 20}} style={{flex: 1, overflow: 'hidden'}}>\n          {hasTags ? (\n            <Box flex={{direction: 'column', gap: 12}} padding={{top: 16, horizontal: 24}}>\n              <Subheading>Tags</Subheading>\n              <div>\n                <RunTags tags={tags} mode={isJob ? null : mode} />\n              </div>\n            </Box>\n          ) : null}\n          <Box flex={{direction: 'column'}} style={{flex: 1, overflow: 'hidden'}}>\n            {hasTags ? (\n              <Box border=\"bottom\" padding={{left: 24, bottom: 16}}>\n                <Subheading>Config</Subheading>\n              </Box>\n            ) : null}\n            <CodeMirrorContainer>\n              <StyledRawCodeMirror\n                value={runConfigYaml}\n                options={{readOnly: true, lineNumbers: true, mode: 'yaml'}}\n                theme={['config-editor']}\n              />\n            </CodeMirrorContainer>\n          </Box>\n        </Box>\n        <DialogFooter topBorder>\n          <Button onClick={() => copyConfig()} intent=\"none\">\n            Copy config\n          </Button>\n          <Button onClick={onClose} intent=\"primary\">\n            OK\n          </Button>\n        </DialogFooter>\n      </Box>\n    </Dialog>\n  );\n};\n\nconst CodeMirrorContainer = styled.div`\n  flex: 1;\n  overflow: hidden;\n\n  .CodeMirror {\n    height: 100%;\n  }\n`;\n","import {useMutation} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {ProgressBar} from '@blueprintjs/core';\nimport {\n  Button,\n  Colors,\n  Dialog,\n  DialogBody,\n  DialogFooter,\n  Group,\n  Icon,\n  Mono,\n} from '@dagster-io/ui-components';\nimport {useEffect, useReducer, useRef} from 'react';\n\nimport {NavigationBlock} from './NavigationBlock';\nimport {LAUNCH_PIPELINE_REEXECUTION_MUTATION} from './RunUtils';\nimport {\n  LaunchPipelineReexecutionMutation,\n  LaunchPipelineReexecutionMutationVariables,\n} from './types/RunUtils.types';\nimport {ReexecutionStrategy} from '../graphql/types';\n\ninterface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: (reexecutionState: ReexecutionState) => void;\n  selectedRuns: {[id: string]: string};\n  reexecutionStrategy: ReexecutionStrategy;\n}\n\nconst refineToError = (data: LaunchPipelineReexecutionMutation | null | undefined) => {\n  if (data?.launchPipelineReexecution.__typename === 'LaunchRunSuccess') {\n    throw new Error('Not an error!');\n  }\n  return data?.launchPipelineReexecution;\n};\n\ntype Error = ReturnType<typeof refineToError>;\n\nconst errorText = (error: Error) => {\n  if (!error) {\n    return 'Unknown error';\n  }\n  switch (error.__typename) {\n    case 'ConflictingExecutionParamsError':\n      return 'Conflicting execution parameters';\n    case 'InvalidOutputError':\n      return 'Invalid output';\n    case 'InvalidStepError':\n      return 'Invalid step';\n    case 'NoModeProvidedError':\n      return 'No mode provided';\n    case 'PipelineNotFoundError':\n      return 'Job not found in workspace';\n    case 'PresetNotFoundError':\n      return 'Preset not found';\n    case 'PythonError':\n      return error.message;\n    case 'RunConfigValidationInvalid':\n      return 'Run config invalid';\n    case 'RunConflict':\n      return 'Run conflict';\n    case 'UnauthorizedError':\n      return 'Re-execution not authorized';\n    case 'InvalidSubsetError':\n      return 'Invalid op subset: ' + error.message;\n    default:\n      return 'Unknown error';\n  }\n};\n\ntype ReexecutionState = {completed: number; errors: {[id: string]: Error}};\n\ntype ReexecutionDialogState = {\n  frozenRuns: SelectedRuns;\n  step: 'initial' | 'reexecuting' | 'completed';\n  reexecution: ReexecutionState;\n};\n\ntype SelectedRuns = {[id: string]: string};\n\nconst initializeState = (selectedRuns: SelectedRuns): ReexecutionDialogState => {\n  return {\n    frozenRuns: selectedRuns,\n    step: 'initial',\n    reexecution: {completed: 0, errors: {}},\n  };\n};\n\ntype ReexecutionDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'start'}\n  | {type: 'reexecution-success'}\n  | {type: 'reexecution-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst reexecutionDialogReducer = (\n  prevState: ReexecutionDialogState,\n  action: ReexecutionDialogAction,\n): ReexecutionDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'start':\n      return {...prevState, step: 'reexecuting'};\n    case 'reexecution-success': {\n      const {reexecution} = prevState;\n      return {\n        ...prevState,\n        step: 'reexecuting',\n        reexecution: {...reexecution, completed: reexecution.completed + 1},\n      };\n    }\n    case 'reexecution-error': {\n      const {reexecution} = prevState;\n      return {\n        ...prevState,\n        step: 'reexecuting',\n        reexecution: {\n          ...reexecution,\n          completed: reexecution.completed + 1,\n          errors: {...reexecution.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const ReexecutionDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, reexecutionStrategy, selectedRuns} = props;\n\n  // Freeze the selected IDs, since the list may change as runs continue processing and\n  // re-executing. We want to preserve the list we're given.\n  const frozenRuns = useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = useReducer(\n    reexecutionDialogReducer,\n    frozenRuns.current,\n    initializeState,\n  );\n\n  const count = Object.keys(state.frozenRuns).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [reexecute] = useMutation<\n    LaunchPipelineReexecutionMutation,\n    LaunchPipelineReexecutionMutationVariables\n  >(LAUNCH_PIPELINE_REEXECUTION_MUTATION);\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (const runId of runList) {\n      const {data} = await reexecute({\n        variables: {\n          reexecutionParams: {\n            parentRunId: runId,\n            strategy: reexecutionStrategy,\n          },\n        },\n      });\n\n      if (data?.launchPipelineReexecution.__typename === 'LaunchRunSuccess') {\n        dispatch({type: 'reexecution-success'});\n      } else {\n        dispatch({type: 'reexecution-error', id: runId, error: refineToError(data)});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete(state.reexecution);\n  };\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Group direction=\"column\" spacing={16}>\n              <div>No runs selected for re-execution.</div>\n              <div>The runs you selected may already have finished executing.</div>\n            </Group>\n          );\n        }\n\n        const message = () => {\n          if (reexecutionStrategy === ReexecutionStrategy.ALL_STEPS) {\n            return (\n              <span>\n                {`${count} ${count === 1 ? 'run' : 'runs'} will be re-executed `}\n                <strong>with all steps</strong>. Do you wish to continue?\n              </span>\n            );\n          }\n          return (\n            <span>\n              {`${count} ${count === 1 ? 'run' : 'runs'} will be re-executed `}\n              <strong>from failure</strong>. Do you wish to continue?\n            </span>\n          );\n        };\n\n        return (\n          <Group direction=\"column\" spacing={16}>\n            <div>{message()}</div>\n          </Group>\n        );\n      case 'reexecuting':\n      case 'completed':\n        const value = count > 0 ? state.reexecution.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'reexecuting' ? (\n              <NavigationBlock message=\"Re-execution in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Button intent=\"none\" onClick={onClose}>\n              OK\n            </Button>\n          );\n        }\n\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"primary\" onClick={mutate}>\n              {`Re-execute ${`${count} ${count === 1 ? 'run' : 'runs'}`}`}\n            </Button>\n          </>\n        );\n      case 'reexecuting':\n        return (\n          <Button intent=\"primary\" disabled>\n            {`Re-executing ${`${count} ${count === 1 ? 'run' : 'runs'}...`}`}\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'reexecuting') {\n      return <div>Please do not close the window or navigate away during re-execution.</div>;\n    }\n\n    const errors = state.reexecution.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.reexecution.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n            <Icon name=\"check_circle\" color={Colors.accentGreen()} />\n            <div>\n              {`Successfully requested re-execution for ${successCount} ${\n                successCount === 1 ? 'run' : `runs`\n              }.`}\n            </div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n              <Icon name=\"warning\" color={Colors.accentYellow()} />\n              <div>\n                {`Could not request re-execution for ${errorCount} ${\n                  errorCount === 1 ? 'run' : 'runs'\n                }:`}\n              </div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8} alignItems=\"baseline\">\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errorText(errors[runId])}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'reexecuting';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title={\n        reexecutionStrategy === ReexecutionStrategy.ALL_STEPS\n          ? 'Re-execute runs'\n          : 'Re-execute runs from failure'\n      }\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      onClose={onClose}\n    >\n      <DialogBody>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </DialogBody>\n      <DialogFooter>{buttons()}</DialogFooter>\n    </Dialog>\n  );\n};\n","import {gql, useLazyQuery} from '@apollo/client';\nimport {\n  Box,\n  Button,\n  Colors,\n  Dialog,\n  DialogBody,\n  DialogFooter,\n  Icon,\n  JoinedButtons,\n  Menu,\n  MenuDivider,\n  MenuExternalLink,\n  MenuItem,\n  Popover,\n  Tooltip,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {DeletionDialog} from './DeletionDialog';\nimport {ReexecutionDialog} from './ReexecutionDialog';\nimport {RunConfigDialog} from './RunConfigDialog';\nimport {doneStatuses, failedStatuses} from './RunStatuses';\nimport {RunTags} from './RunTags';\nimport {RunsQueryRefetchContext} from './RunUtils';\nimport {RunFilterToken} from './RunsFilterInput';\nimport {TerminationDialog} from './TerminationDialog';\nimport {\n  PipelineEnvironmentQuery,\n  PipelineEnvironmentQueryVariables,\n} from './types/RunActionsMenu.types';\nimport {RunTableRunFragment} from './types/RunTable.types';\nimport {useJobAvailabilityErrorForRun} from './useJobAvailabilityErrorForRun';\nimport {useJobReexecution} from './useJobReExecution';\nimport {AppContext} from '../app/AppContext';\nimport {showSharedToaster} from '../app/DomUtils';\nimport {DEFAULT_DISABLED_REASON} from '../app/Permissions';\nimport {useCopyToClipboard} from '../app/browser';\nimport {ReexecutionStrategy} from '../graphql/types';\nimport {getPipelineSnapshotLink} from '../pipelines/PipelinePathUtils';\nimport {AnchorButton} from '../ui/AnchorButton';\nimport {MenuLink} from '../ui/MenuLink';\nimport {isThisThingAJob} from '../workspace/WorkspaceContext';\nimport {useRepositoryForRunWithParentSnapshot} from '../workspace/useRepositoryForRun';\nimport {workspacePipelineLinkForRun} from '../workspace/workspacePath';\n\ninterface Props {\n  run: RunTableRunFragment;\n  additionalActionsForRun?: (run: RunTableRunFragment) => React.ReactNode[];\n  onAddTag?: (token: RunFilterToken) => void;\n}\n\nexport const RunActionsMenu = React.memo(({run, onAddTag, additionalActionsForRun}: Props) => {\n  const {refetch} = React.useContext(RunsQueryRefetchContext);\n  const [visibleDialog, setVisibleDialog] = React.useState<\n    'none' | 'terminate' | 'delete' | 'config' | 'tags'\n  >('none');\n\n  const {rootServerURI} = React.useContext(AppContext);\n\n  const copyConfig = useCopyToClipboard();\n  const onCopy = async () => {\n    copyConfig(runConfigYaml || '');\n    await showSharedToaster({\n      intent: 'success',\n      icon: 'copy_to_clipboard_done',\n      message: 'Copied!',\n    });\n  };\n\n  const reexecute = useJobReexecution({onCompleted: refetch});\n\n  const [loadEnv, {called, loading, data}] = useLazyQuery<\n    PipelineEnvironmentQuery,\n    PipelineEnvironmentQueryVariables\n  >(PIPELINE_ENVIRONMENT_QUERY, {\n    variables: {runId: run.id},\n  });\n\n  const closeDialogs = () => {\n    setVisibleDialog('none');\n  };\n\n  const onComplete = () => {\n    refetch();\n  };\n\n  const pipelineRun =\n    data?.pipelineRunOrError?.__typename === 'Run' ? data?.pipelineRunOrError : null;\n  const runConfigYaml = pipelineRun?.runConfigYaml;\n\n  const repoMatch = useRepositoryForRunWithParentSnapshot(pipelineRun);\n  const jobError = useJobAvailabilityErrorForRun({\n    ...run,\n    parentPipelineSnapshotId: pipelineRun?.parentPipelineSnapshotId,\n  });\n\n  const isFinished = doneStatuses.has(run.status);\n  const isJob = !!(repoMatch && isThisThingAJob(repoMatch?.match, run.pipelineName));\n\n  const infoReady = called ? !loading : false;\n\n  const reexecutionDisabledState = React.useMemo(() => {\n    if (!run.hasReExecutePermission) {\n      return {disabled: true, message: DEFAULT_DISABLED_REASON};\n    }\n    if (jobError) {\n      return {disabled: jobError.disabled, message: jobError.tooltip};\n    }\n    if (!infoReady) {\n      return {disabled: true};\n    }\n    return {disabled: false};\n  }, [run.hasReExecutePermission, jobError, infoReady]);\n\n  const jobLink = workspacePipelineLinkForRun({\n    run,\n    repositoryName: repoMatch?.match.repository.name,\n    repositoryLocationName: repoMatch?.match.repositoryLocation.name,\n    isJob,\n  });\n\n  return (\n    <>\n      <JoinedButtons>\n        <AnchorButton to={`/runs/${run.id}`}>View run</AnchorButton>\n        <Popover\n          content={\n            <Menu>\n              <MenuItem\n                tagName=\"button\"\n                style={{minWidth: 200}}\n                text={loading ? 'Loading configuration...' : 'View configuration...'}\n                disabled={!runConfigYaml}\n                icon=\"open_in_new\"\n                onClick={() => setVisibleDialog('config')}\n              />\n              <MenuItem\n                tagName=\"button\"\n                text={\n                  <div style={{display: 'contents'}}>\n                    View all tags\n                    <Box\n                      flex={{\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        display: 'inline-flex',\n                      }}\n                      padding={{horizontal: 8}}\n                    >\n                      <SlashShortcut>t</SlashShortcut>\n                    </Box>\n                  </div>\n                }\n                icon=\"tag\"\n                onClick={() => setVisibleDialog('tags')}\n              />\n\n              {run.pipelineSnapshotId ? (\n                <LinkNoUnderline\n                  to={getPipelineSnapshotLink(run.pipelineName, run.pipelineSnapshotId)}\n                >\n                  <MenuItem\n                    tagName=\"button\"\n                    icon=\"job\"\n                    text=\"View snapshot\"\n                    onClick={() => setVisibleDialog('tags')}\n                  />\n                </LinkNoUnderline>\n              ) : null}\n              <MenuDivider />\n              <>\n                <Tooltip\n                  content={jobLink.disabledReason || OPEN_LAUNCHPAD_UNKNOWN}\n                  position=\"left\"\n                  disabled={infoReady && !jobLink.disabledReason}\n                  targetTagName=\"div\"\n                >\n                  <MenuLink\n                    text={jobLink.label}\n                    disabled={!infoReady || !!jobLink.disabledReason}\n                    icon={jobLink.icon}\n                    to={jobLink.to}\n                  />\n                </Tooltip>\n                <Tooltip\n                  content={reexecutionDisabledState.message || ''}\n                  position=\"left\"\n                  canShow={reexecutionDisabledState.disabled}\n                  targetTagName=\"div\"\n                >\n                  <MenuItem\n                    tagName=\"button\"\n                    text=\"Re-execute\"\n                    disabled={reexecutionDisabledState.disabled}\n                    icon=\"refresh\"\n                    onClick={async () => {\n                      await reexecute(run, ReexecutionStrategy.ALL_STEPS);\n                    }}\n                  />\n                </Tooltip>\n                {isFinished || !run.hasTerminatePermission ? null : (\n                  <MenuItem\n                    tagName=\"button\"\n                    icon=\"cancel\"\n                    text=\"Terminate\"\n                    onClick={() => setVisibleDialog('terminate')}\n                  />\n                )}\n                {additionalActionsForRun?.(run)}\n                <MenuDivider />\n              </>\n              <MenuExternalLink\n                text=\"Download debug file\"\n                icon=\"download_for_offline\"\n                download\n                href={`${rootServerURI}/download_debug/${run.id}`}\n              />\n              {run.hasDeletePermission ? (\n                <MenuItem\n                  tagName=\"button\"\n                  icon=\"delete\"\n                  text=\"Delete\"\n                  intent=\"danger\"\n                  onClick={() => setVisibleDialog('delete')}\n                />\n              ) : null}\n            </Menu>\n          }\n          position=\"bottom-right\"\n          onOpening={() => {\n            if (!called) {\n              loadEnv();\n            }\n          }}\n        >\n          <Button icon={<Icon name=\"expand_more\" />} />\n        </Popover>\n      </JoinedButtons>\n      {run.hasTerminatePermission ? (\n        <TerminationDialog\n          isOpen={visibleDialog === 'terminate'}\n          onClose={closeDialogs}\n          onComplete={onComplete}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n      {run.hasDeletePermission ? (\n        <DeletionDialog\n          isOpen={visibleDialog === 'delete'}\n          onClose={closeDialogs}\n          onComplete={onComplete}\n          onTerminateInstead={() => setVisibleDialog('terminate')}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n      <Dialog\n        isOpen={visibleDialog === 'tags'}\n        title=\"Tags\"\n        canOutsideClickClose\n        canEscapeKeyClose\n        onClose={closeDialogs}\n      >\n        <DialogBody>\n          <RunTags\n            tags={run.tags}\n            mode={isJob ? (run.mode !== 'default' ? run.mode : null) : run.mode}\n            onAddTag={onAddTag}\n          />\n        </DialogBody>\n        <DialogFooter topBorder>\n          <Button intent=\"primary\" onClick={closeDialogs}>\n            Close\n          </Button>\n        </DialogFooter>\n      </Dialog>\n      <RunConfigDialog\n        isOpen={visibleDialog === 'config'}\n        onClose={closeDialogs}\n        copyConfig={onCopy}\n        mode={run.mode}\n        runConfigYaml={runConfigYaml || ''}\n        isJob={isJob}\n      />\n    </>\n  );\n});\n\ninterface RunBulkActionsMenuProps {\n  selected: RunTableRunFragment[];\n  clearSelection: () => void;\n}\n\nexport const RunBulkActionsMenu = React.memo((props: RunBulkActionsMenuProps) => {\n  const {selected, clearSelection} = props;\n  const {refetch} = React.useContext(RunsQueryRefetchContext);\n\n  const [visibleDialog, setVisibleDialog] = React.useState<\n    'none' | 'terminate' | 'delete' | 'reexecute-from-failure' | 'reexecute'\n  >('none');\n\n  const canTerminateAny = React.useMemo(() => {\n    return selected.some((run) => run.hasTerminatePermission);\n  }, [selected]);\n\n  const canDeleteAny = React.useMemo(() => {\n    return selected.some((run) => run.hasTerminatePermission);\n  }, [selected]);\n\n  const canReexecuteAny = React.useMemo(() => {\n    return selected.some((run) => run.hasReExecutePermission);\n  }, [selected]);\n\n  const disabled = !canTerminateAny && !canDeleteAny;\n\n  const terminatableRuns = selected.filter(\n    (r) => !doneStatuses.has(r?.status) && r.hasTerminatePermission,\n  );\n  const terminateableIDs = terminatableRuns.map((r) => r.id);\n  const terminateableMap = terminatableRuns.reduce(\n    (accum, run) => ({...accum, [run.id]: run.canTerminate}),\n    {},\n  );\n\n  const deleteableIDs = selected.map((run) => run.id);\n  const deletionMap = selected.reduce((accum, run) => ({...accum, [run.id]: run.canTerminate}), {});\n\n  const reexecuteFromFailureRuns = selected.filter(\n    (r) => failedStatuses.has(r?.status) && r.hasReExecutePermission,\n  );\n  const reexecuteFromFailureMap = reexecuteFromFailureRuns.reduce(\n    (accum, run) => ({...accum, [run.id]: run.id}),\n    {},\n  );\n\n  const reexecutableRuns = selected.filter(\n    (r) => doneStatuses.has(r?.status) && r.hasReExecutePermission,\n  );\n  const reexecutableMap = reexecutableRuns.reduce(\n    (accum, run) => ({...accum, [run.id]: run.id}),\n    {},\n  );\n\n  const closeDialogs = () => {\n    setVisibleDialog('none');\n  };\n\n  const onComplete = () => {\n    clearSelection();\n    refetch();\n  };\n\n  return (\n    <>\n      <Popover\n        disabled={disabled || selected.length === 0}\n        content={\n          <Menu>\n            {canTerminateAny ? (\n              <MenuItem\n                icon=\"cancel\"\n                text={`Terminate ${terminateableIDs.length} ${\n                  terminateableIDs.length === 1 ? 'run' : 'runs'\n                }`}\n                disabled={terminateableIDs.length === 0}\n                onClick={() => {\n                  setVisibleDialog('terminate');\n                }}\n              />\n            ) : null}\n            {canDeleteAny ? (\n              <MenuItem\n                icon=\"delete\"\n                intent=\"danger\"\n                text={`Delete ${deleteableIDs.length} ${\n                  deleteableIDs.length === 1 ? 'run' : 'runs'\n                }`}\n                disabled={deleteableIDs.length === 0}\n                onClick={() => {\n                  setVisibleDialog('delete');\n                }}\n              />\n            ) : null}\n            {canReexecuteAny ? (\n              <>\n                <MenuItem\n                  icon=\"refresh\"\n                  text={`Re-execute ${reexecutableRuns.length} ${\n                    reexecutableRuns.length === 1 ? 'run' : 'runs'\n                  }`}\n                  disabled={reexecutableRuns.length === 0}\n                  onClick={() => {\n                    setVisibleDialog('reexecute');\n                  }}\n                />\n                <MenuItem\n                  icon=\"refresh\"\n                  text={`Re-execute ${reexecuteFromFailureRuns.length} ${\n                    reexecuteFromFailureRuns.length === 1 ? 'run' : 'runs'\n                  } from failure`}\n                  disabled={reexecuteFromFailureRuns.length === 0}\n                  onClick={() => {\n                    setVisibleDialog('reexecute-from-failure');\n                  }}\n                />\n              </>\n            ) : null}\n          </Menu>\n        }\n        position=\"bottom-right\"\n      >\n        <Button\n          disabled={disabled || selected.length === 0}\n          rightIcon={<Icon name=\"expand_more\" />}\n          intent=\"primary\"\n        >\n          Actions\n        </Button>\n      </Popover>\n      <TerminationDialog\n        isOpen={visibleDialog === 'terminate'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={terminateableMap}\n      />\n      <DeletionDialog\n        isOpen={visibleDialog === 'delete'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        onTerminateInstead={() => setVisibleDialog('terminate')}\n        selectedRuns={deletionMap}\n      />\n      <ReexecutionDialog\n        isOpen={visibleDialog === 'reexecute-from-failure'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={reexecuteFromFailureMap}\n        reexecutionStrategy={ReexecutionStrategy.FROM_FAILURE}\n      />\n      <ReexecutionDialog\n        isOpen={visibleDialog === 'reexecute'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={reexecutableMap}\n        reexecutionStrategy={ReexecutionStrategy.ALL_STEPS}\n      />\n    </>\n  );\n});\n\nconst OPEN_LAUNCHPAD_UNKNOWN =\n  'Launchpad is unavailable because the pipeline is not present in the current repository.';\n\n// Avoid fetching envYaml and parentPipelineSnapshotId on load in Runs page, they're slow.\nexport const PIPELINE_ENVIRONMENT_QUERY = gql`\n  query PipelineEnvironmentQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      ... on Run {\n        id\n        pipelineName\n        pipelineSnapshotId\n        runConfigYaml\n        pipelineName\n        parentPipelineSnapshotId\n        repositoryOrigin {\n          id\n          repositoryName\n          repositoryLocationName\n        }\n      }\n    }\n  }\n`;\n\nconst SlashShortcut = styled.div`\n  border-radius: 4px;\n  padding: 0px 6px;\n  background: ${Colors.backgroundLight()};\n  color: ${Colors.textLight()};\n`;\n\nconst LinkNoUnderline = styled(Link)`\n  text-decoration: none !important;\n`;\n","import {useCallback} from 'react';\n\nimport {DagsterTag} from './RunTag';\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\n\nexport function useTagPinning() {\n  // Most system tags are unpinned by default so we track pinned for these.\n  const [pinnedSystemTags, setPinnedSystemTags] = useStateWithStorage(\n    'pinned-system-tags',\n    validateIsArray,\n  );\n\n  // All user tags are pinned by default so we track unpinned.\n  const [unpinnedTags, setUnpinnedTags] = useStateWithStorage('unpinned-tags', validateIsArray);\n\n  const onToggleTagPin = useCallback(\n    (tagKey: string) => {\n      if (isUnpinnedByDefaultSystemTag(tagKey)) {\n        setPinnedSystemTags((pinnedSystemTags) => toggleTag(pinnedSystemTags, tagKey));\n      } else {\n        setUnpinnedTags((unpinnedTags) => toggleTag(unpinnedTags, tagKey));\n      }\n    },\n    [setUnpinnedTags, setPinnedSystemTags],\n  );\n\n  const isTagPinned = useCallback(\n    (tag: {key: string}) => {\n      return isUnpinnedByDefaultSystemTag(tag.key)\n        ? pinnedSystemTags.indexOf(tag.key) !== -1\n        : unpinnedTags.indexOf(tag.key) === -1;\n    },\n    [pinnedSystemTags, unpinnedTags],\n  );\n\n  return {\n    isTagPinned,\n    onToggleTagPin,\n  };\n}\n\nfunction validateIsArray(value: any) {\n  if (Array.isArray(value)) {\n    return value;\n  }\n  return [];\n}\n\nfunction isUnpinnedByDefaultSystemTag(key: string) {\n  return (\n    (key.startsWith(DagsterTag.Namespace) &&\n      key !== DagsterTag.Partition &&\n      key !== DagsterTag.Backfill) ||\n    key === 'mode'\n  );\n}\n\nfunction toggleTag(tagsArr: string[] | undefined, tagKey: string): string[] {\n  const tags = tagsArr || [];\n  if (tags.indexOf(tagKey) !== -1) {\n    return tags.filter((key) => key !== tagKey);\n  } else {\n    return [...tags, tagKey];\n  }\n}\n","import {\n  Box,\n  Button,\n  ButtonLink,\n  Caption,\n  Checkbox,\n  Colors,\n  Dialog,\n  DialogBody,\n  DialogFooter,\n  Mono,\n  Tag,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {AssetCheckTagCollection, AssetKeyTagCollection} from './AssetTagCollections';\nimport {CreatedByTagCell} from './CreatedByTag';\nimport {RunActionsMenu} from './RunActionsMenu';\nimport {RunStatusTagWithStats} from './RunStatusTag';\nimport {DagsterTag, TagType} from './RunTag';\nimport {RunTags} from './RunTags';\nimport {RunStateSummary, RunTime, assetKeysForRun, titleForRun} from './RunUtils';\nimport {RunFilterToken, runsPathWithFilters} from './RunsFilterInput';\nimport {RunTableRunFragment} from './types/RunTable.types';\nimport {useTagPinning} from './useTagPinning';\nimport {ShortcutHandler} from '../app/ShortcutHandler';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {PipelineTag} from '../graphql/types';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\nimport {RepoAddress} from '../workspace/types';\nimport {useRepositoryForRunWithoutSnapshot} from '../workspace/useRepositoryForRun';\n\nexport const RunRow = ({\n  run,\n  hasCheckboxColumn,\n  canTerminateOrDelete,\n  onAddTag,\n  checked,\n  onToggleChecked,\n  additionalColumns,\n  additionalActionsForRun,\n  isHighlighted,\n  hideCreatedBy,\n}: {\n  run: RunTableRunFragment;\n  hasCheckboxColumn: boolean;\n  canTerminateOrDelete: boolean;\n  onAddTag?: (token: RunFilterToken) => void;\n  checked?: boolean;\n  onToggleChecked?: (values: {checked: boolean; shiftKey: boolean}) => void;\n  additionalColumns?: React.ReactNode[];\n  additionalActionsForRun?: (run: RunTableRunFragment) => React.ReactNode[];\n  isHighlighted?: boolean;\n  hideCreatedBy?: boolean;\n}) => {\n  const {pipelineName} = run;\n  const repo = useRepositoryForRunWithoutSnapshot(run);\n  const {isTagPinned, onToggleTagPin} = useTagPinning();\n\n  const isJob = React.useMemo(() => {\n    if (repo) {\n      const pipelinesAndJobs = repo.match.repository.pipelines;\n      const match = pipelinesAndJobs.find((pipelineOrJob) => pipelineOrJob.name === pipelineName);\n      return !!match?.isJob;\n    }\n    return false;\n  }, [repo, pipelineName]);\n\n  const repoAddressGuess = React.useMemo(() => {\n    if (repo) {\n      const {match} = repo;\n      return buildRepoAddress(match.repository.name, match.repositoryLocation.name);\n    }\n    return null;\n  }, [repo]);\n\n  const onChange = (e: React.FormEvent<HTMLInputElement>) => {\n    if (e.target instanceof HTMLInputElement) {\n      const {checked} = e.target;\n      const shiftKey =\n        e.nativeEvent instanceof MouseEvent && e.nativeEvent.getModifierState('Shift');\n      onToggleChecked && onToggleChecked({checked, shiftKey});\n    }\n  };\n\n  const allTagsWithPinned = React.useMemo(() => {\n    const allTags: Omit<PipelineTag, '__typename'>[] = [...run.tags];\n    if ((isJob && run.mode !== 'default') || !isJob) {\n      allTags.push({key: 'mode', value: run.mode});\n    }\n    return allTags.map((tag) => {\n      return {...tag, pinned: isTagPinned(tag)};\n    });\n  }, [run, isJob, isTagPinned]);\n\n  const isReexecution = run.tags.some((tag) => tag.key === DagsterTag.ParentRunId);\n\n  const [showRunTags, setShowRunTags] = React.useState(false);\n  const [isHovered, setIsHovered] = React.useState(false);\n\n  const tagsToShow = React.useMemo(() => {\n    const targetBackfill = allTagsWithPinned.find((tag) => tag.key === DagsterTag.Backfill);\n    const tagKeys: Set<string> = new Set([]);\n    const tags: TagType[] = [];\n\n    if (targetBackfill && targetBackfill.pinned) {\n      const link = run.assetSelection?.length\n        ? `/overview/backfills/${targetBackfill.value}`\n        : runsPathWithFilters([\n            {\n              token: 'tag',\n              value: `${DagsterTag.Backfill}=${targetBackfill.value}`,\n            },\n          ]);\n      tags.push({\n        ...targetBackfill,\n        link,\n      });\n      tagKeys.add(DagsterTag.Backfill as string);\n    }\n    allTagsWithPinned.forEach((tag) => {\n      if (tagKeys.has(tag.key)) {\n        // We already added this tag\n        return;\n      }\n      if (tag.pinned) {\n        tags.push(tag);\n      }\n    });\n    return tags;\n  }, [allTagsWithPinned, run.assetSelection?.length]);\n\n  return (\n    <Row\n      highlighted={!!isHighlighted}\n      onMouseEnter={() => {\n        setIsHovered(true);\n      }}\n      onMouseLeave={() => {\n        setIsHovered(false);\n      }}\n    >\n      {hasCheckboxColumn ? (\n        <td>\n          {canTerminateOrDelete ? (\n            <>{onToggleChecked ? <Checkbox checked={!!checked} onChange={onChange} /> : null}</>\n          ) : null}\n        </td>\n      ) : null}\n      <td>\n        <Link to={`/runs/${run.id}`}>\n          <Mono>{titleForRun(run)}</Mono>\n        </Link>\n      </td>\n      <td>\n        <Box flex={{direction: 'column', gap: 4}}>\n          <RunTime run={run} />\n          {isReexecution ? (\n            <div>\n              <Tag icon=\"cached\">Re-execution</Tag>\n            </div>\n          ) : null}\n        </Box>\n      </td>\n      <td style={{position: 'relative'}}>\n        <Box flex={{direction: 'column', gap: 5}}>\n          <RunTargetLink isJob={isJob} run={run} repoAddress={repoAddressGuess} />\n          <Box\n            flex={{direction: 'row', alignItems: 'center', wrap: 'wrap'}}\n            style={{gap: '4px 8px'}}\n          >\n            <RunTagsWrapper>\n              {tagsToShow.length ? (\n                <RunTags tags={tagsToShow} onAddTag={onAddTag} onToggleTagPin={onToggleTagPin} />\n              ) : null}\n            </RunTagsWrapper>\n            {allTagsWithPinned.length > tagsToShow.length ? (\n              <Caption>\n                <ButtonLink\n                  onClick={() => {\n                    setShowRunTags(true);\n                  }}\n                  color={Colors.textLight()}\n                  style={{margin: '-4px', padding: '4px'}}\n                >\n                  View all tags ({allTagsWithPinned.length})\n                </ButtonLink>\n              </Caption>\n            ) : null}\n          </Box>\n        </Box>\n        {isHovered && allTagsWithPinned.length ? (\n          <ShortcutHandler\n            key=\"runtabletags\"\n            onShortcut={() => {\n              setShowRunTags((showRunTags) => !showRunTags);\n            }}\n            shortcutLabel=\"t\"\n            shortcutFilter={(e) => e.code === 'KeyT'}\n          >\n            {null}\n          </ShortcutHandler>\n        ) : null}\n      </td>\n      {hideCreatedBy ? null : (\n        <td>\n          <CreatedByTagCell\n            repoAddress={repoAddressGuess}\n            tags={run.tags || []}\n            onAddTag={onAddTag}\n          />\n        </td>\n      )}\n      <td>\n        <RunStatusTagWithStats status={run.status} runId={run.id} />\n      </td>\n      <td>\n        <RunStateSummary run={run} />\n      </td>\n      {additionalColumns}\n      <td>\n        <RunActionsMenu\n          run={run}\n          onAddTag={onAddTag}\n          additionalActionsForRun={additionalActionsForRun}\n        />\n      </td>\n      <Dialog\n        isOpen={showRunTags}\n        title=\"Tags\"\n        canOutsideClickClose\n        canEscapeKeyClose\n        onClose={() => {\n          setShowRunTags(false);\n        }}\n      >\n        <DialogBody>\n          <RunTags tags={allTagsWithPinned} onAddTag={onAddTag} onToggleTagPin={onToggleTagPin} />\n        </DialogBody>\n        <DialogFooter topBorder>\n          <Button\n            intent=\"primary\"\n            onClick={() => {\n              setShowRunTags(false);\n            }}\n          >\n            Close\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    </Row>\n  );\n};\n\nconst Row = styled.tr<{highlighted: boolean}>`\n  ${({highlighted}) =>\n    highlighted ? `box-shadow: inset 3px 3px #bfccd6, inset -3px -3px #bfccd6;` : null}\n`;\n\nconst RunTagsWrapper = styled.div`\n  display: contents;\n  > * {\n    display: contents;\n  }\n`;\n\nconst RunTargetLink = ({\n  run,\n  isJob,\n  repoAddress,\n}: {\n  isJob: boolean;\n  run: RunTableRunFragment;\n  repoAddress: RepoAddress | null;\n}) => {\n  return isHiddenAssetGroupJob(run.pipelineName) ? (\n    <Box flex={{gap: 16, alignItems: 'end', wrap: 'wrap'}}>\n      <AssetKeyTagCollection assetKeys={assetKeysForRun(run)} />\n      <AssetCheckTagCollection assetChecks={run.assetCheckSelection} />\n    </Box>\n  ) : (\n    <PipelineReference\n      isJob={isJob}\n      showIcon\n      pipelineName={run.pipelineName}\n      pipelineHrefContext={repoAddress || 'repo-unknown'}\n    />\n  );\n};\n","export default \"/_next/static/media/ShowAndHideRunTags.3fa9746ba2f415094d257d3c8e73389d.mp4\";","import {gql} from '@apollo/client';\nimport {\n  Box,\n  Checkbox,\n  Icon,\n  NonIdealState,\n  ProductTour,\n  ProductTourPosition,\n  Table,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {RunBulkActionsMenu} from './RunActionsMenu';\nimport {RunRow} from './RunRow';\nimport {RUN_TIME_FRAGMENT} from './RunUtils';\nimport {RunFilterToken} from './RunsFilterInput';\nimport ShowAndHideTagsMP4 from './ShowAndHideRunTags.mp4';\nimport {RunTableRunFragment} from './types/RunTable.types';\nimport {RunsFilter} from '../graphql/types';\nimport {useSelectionReducer} from '../hooks/useSelectionReducer';\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\nimport {AnchorButton} from '../ui/AnchorButton';\n\ninterface RunTableProps {\n  runs: RunTableRunFragment[];\n  filter?: RunsFilter;\n  onAddTag?: (token: RunFilterToken) => void;\n  actionBarComponents?: React.ReactNode;\n  highlightedIds?: string[];\n  additionalColumnHeaders?: React.ReactNode[];\n  additionalColumnsForRow?: (run: RunTableRunFragment) => React.ReactNode[];\n  belowActionBarComponents?: React.ReactNode;\n  hideCreatedBy?: boolean;\n  additionalActionsForRun?: (run: RunTableRunFragment) => JSX.Element[];\n  emptyState?: () => React.ReactNode;\n}\n\nexport const RunTable = (props: RunTableProps) => {\n  const {\n    runs,\n    filter,\n    onAddTag,\n    highlightedIds,\n    actionBarComponents,\n    belowActionBarComponents,\n    hideCreatedBy,\n    emptyState,\n  } = props;\n  const allIds = runs.map((r) => r.id);\n\n  const [{checkedIds}, {onToggleFactory, onToggleAll}] = useSelectionReducer(allIds);\n\n  const canTerminateOrDeleteAny = React.useMemo(() => {\n    return runs.some((run) => run.hasTerminatePermission || run.hasDeletePermission);\n  }, [runs]);\n\n  function content() {\n    if (runs.length === 0) {\n      const anyFilter = !!Object.keys(filter || {}).length;\n      if (emptyState) {\n        return <>{emptyState()}</>;\n      }\n\n      return (\n        <div>\n          <Box margin={{vertical: 32}}>\n            {anyFilter ? (\n              <NonIdealState\n                icon=\"run\"\n                title=\"No matching runs\"\n                description=\"No runs were found for this filter.\"\n              />\n            ) : (\n              <NonIdealState\n                icon=\"run\"\n                title=\"No runs found\"\n                description={\n                  <Box flex={{direction: 'column', gap: 12}}>\n                    <div>You have not launched any runs yet.</div>\n                    <Box flex={{direction: 'row', gap: 12, alignItems: 'center'}}>\n                      <AnchorButton icon={<Icon name=\"add_circle\" />} to=\"/overview/jobs\">\n                        Launch a run\n                      </AnchorButton>\n                      <span>or</span>\n                      <AnchorButton icon={<Icon name=\"materialization\" />} to=\"/asset-groups\">\n                        Materialize an asset\n                      </AnchorButton>\n                    </Box>\n                  </Box>\n                }\n              />\n            )}\n          </Box>\n        </div>\n      );\n    } else {\n      return (\n        <Table>\n          <thead>\n            <tr>\n              {canTerminateOrDeleteAny ? (\n                <th style={{width: 42, paddingTop: 0, paddingBottom: 0}}>\n                  <Checkbox\n                    indeterminate={checkedIds.size > 0 && checkedIds.size !== runs.length}\n                    checked={checkedIds.size === runs.length}\n                    onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                      if (e.target instanceof HTMLInputElement) {\n                        onToggleAll(e.target.checked);\n                      }\n                    }}\n                  />\n                </th>\n              ) : null}\n              <th style={{width: 90}}>Run ID</th>\n              <th style={{width: 180}}>Created date</th>\n              <th>\n                <TargetHeader />\n              </th>\n              {hideCreatedBy ? null : <th style={{width: 160}}>Launched by</th>}\n              <th style={{width: 120}}>Status</th>\n              <th style={{width: 190}}>Duration</th>\n              {props.additionalColumnHeaders}\n              <th style={{width: 52}} />\n            </tr>\n          </thead>\n          <tbody>\n            {runs.map((run) => (\n              <RunRow\n                hasCheckboxColumn={canTerminateOrDeleteAny}\n                canTerminateOrDelete={run.hasTerminatePermission || run.hasDeletePermission}\n                run={run}\n                key={run.id}\n                onAddTag={onAddTag}\n                checked={checkedIds.has(run.id)}\n                additionalColumns={props.additionalColumnsForRow?.(run)}\n                additionalActionsForRun={props.additionalActionsForRun}\n                onToggleChecked={onToggleFactory(run.id)}\n                isHighlighted={highlightedIds && highlightedIds.includes(run.id)}\n                hideCreatedBy={hideCreatedBy}\n              />\n            ))}\n          </tbody>\n        </Table>\n      );\n    }\n  }\n\n  const selectedFragments = runs.filter((run) => checkedIds.has(run.id));\n\n  return (\n    <>\n      <ActionBar\n        top={\n          <Box\n            flex={{\n              direction: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              grow: 1,\n            }}\n          >\n            {actionBarComponents}\n            <RunBulkActionsMenu\n              selected={selectedFragments}\n              clearSelection={() => onToggleAll(false)}\n            />\n          </Box>\n        }\n        bottom={belowActionBarComponents}\n      />\n      {content()}\n    </>\n  );\n};\n\nexport const RUN_TAGS_FRAGMENT = gql`\n  fragment RunTagsFragment on PipelineTag {\n    key\n    value\n  }\n`;\n\nexport const RUN_TABLE_RUN_FRAGMENT = gql`\n  fragment RunTableRunFragment on Run {\n    id\n    status\n    stepKeysToExecute\n    canTerminate\n    hasReExecutePermission\n    hasTerminatePermission\n    hasDeletePermission\n    mode\n    rootRunId\n    parentRunId\n    pipelineSnapshotId\n    pipelineName\n    repositoryOrigin {\n      id\n      repositoryName\n      repositoryLocationName\n    }\n    solidSelection\n    assetSelection {\n      ... on AssetKey {\n        path\n      }\n    }\n    assetCheckSelection {\n      name\n      assetKey {\n        path\n      }\n    }\n    status\n    tags {\n      ...RunTagsFragment\n    }\n    ...RunTimeFragment\n  }\n\n  ${RUN_TIME_FRAGMENT}\n  ${RUN_TAGS_FRAGMENT}\n`;\n\nfunction ActionBar({top, bottom}: {top: React.ReactNode; bottom?: React.ReactNode}) {\n  return (\n    <Box flex={{direction: 'column'}} padding={{vertical: 12}}>\n      <Box flex={{alignItems: 'center', gap: 12}} padding={{left: 24, right: 12}}>\n        {top}\n      </Box>\n      {bottom ? (\n        <Box\n          margin={{top: 12}}\n          padding={{left: 24, right: 12, top: 8}}\n          border=\"top\"\n          flex={{gap: 8, wrap: 'wrap'}}\n        >\n          {bottom}\n        </Box>\n      ) : null}\n    </Box>\n  );\n}\n\nfunction TargetHeader() {\n  const [hideTabPinningNux, setHideTabPinningNux] = useStateWithStorage<any>(\n    'RunTableTabPinningNux',\n    (value) => value,\n  );\n  if (hideTabPinningNux) {\n    return <div>Target</div>;\n  }\n  return (\n    <ProductTour\n      title=\"Hide and show run tags\"\n      description={\n        <>\n          You can show tags that you prefer quick access to and hide tags you don&apos;t by hovering\n          over the tag and selecting the show/hide tag option.\n        </>\n      }\n      position={ProductTourPosition.BOTTOM_RIGHT}\n      video={ShowAndHideTagsMP4}\n      width=\"616px\"\n      actions={{\n        dismiss: () => {\n          setHideTabPinningNux('1');\n        },\n      }}\n    >\n      <div>Target</div>\n    </ProductTour>\n  );\n}\n","// eslint-disable-next-line no-restricted-imports\nimport {AnchorButton as BlueprintAnchorButton} from '@blueprintjs/core';\nimport {StyledButton, StyledButtonText, buildColorSet} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link, LinkProps} from 'react-router-dom';\n\ntype AnchorButtonProps = Omit<\n  React.ComponentProps<typeof BlueprintAnchorButton>,\n  'loading' | 'onClick' | 'onFocus' | 'type'\n> &\n  LinkProps & {\n    label?: React.ReactNode;\n  };\n\nexport const AnchorButton = React.forwardRef(\n  (props: AnchorButtonProps, ref: React.ForwardedRef<HTMLAnchorElement>) => {\n    const {children, icon, intent, outlined, rightIcon, ...rest} = props;\n\n    const {fillColor, fillColorHover, textColor, iconColor, strokeColor, strokeColorHover} =\n      React.useMemo(() => buildColorSet({intent, outlined}), [intent, outlined]);\n\n    return (\n      <StyledButton\n        {...rest}\n        as={Link}\n        $fillColor={fillColor}\n        $fillColorHover={fillColorHover}\n        $strokeColor={strokeColor}\n        $strokeColorHover={strokeColorHover}\n        $textColor={textColor}\n        $iconColor={iconColor}\n        ref={ref}\n      >\n        {icon || null}\n        {children ? <StyledButtonText>{children}</StyledButtonText> : null}\n        {rightIcon || null}\n      </StyledButton>\n    );\n  },\n);\n\nAnchorButton.displayName = 'AnchorButton';\n","// eslint-disable-next-line no-restricted-imports\nimport {\n  Box,\n  Colors,\n  CommonMenuItemProps,\n  IconWrapper,\n  MenuItem,\n  iconWithColor,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link, LinkProps} from 'react-router-dom';\nimport styled from 'styled-components';\n\ninterface MenuLinkProps\n  extends CommonMenuItemProps,\n    Omit<React.ComponentProps<typeof MenuItem>, 'icon' | 'onClick' | 'onFocus' | 'target'>,\n    LinkProps {}\n\n/**\n * If you want to use a menu item as a link, use `MenuLink` and provide a `to` prop.\n */\nexport const MenuLink = (props: MenuLinkProps) => {\n  const {icon, intent, text, disabled, ...rest} = props;\n\n  if (disabled) {\n    return <MenuItem disabled icon={icon} intent={intent} text={text} />;\n  }\n  return (\n    <StyledMenuLink {...rest}>\n      <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n        {iconWithColor(icon, intent)}\n        <div>{text}</div>\n      </Box>\n    </StyledMenuLink>\n  );\n};\n\nconst StyledMenuLink = styled(Link)`\n  text-decoration: none;\n\n  border-radius: 4px;\n  display: block;\n  line-height: 20px;\n  padding: 6px 8px 6px 12px;\n  transition:\n    background-color 50ms,\n    box-shadow 150ms;\n  align-items: flex-start;\n  user-select: none;\n\n  /**\n   * Use margin instead of align-items: center because the contents of the menu item may wrap \n   * in unusual circumstances.\n   */\n  ${IconWrapper} {\n    margin-top: 2px;\n  }\n\n  ${IconWrapper}:first-child {\n    margin-left: -4px;\n  }\n\n  &&&:link,\n  &&&:visited,\n  &&&:hover,\n  &&&:active {\n    color: ${Colors.textDefault()};\n    text-decoration: none;\n  }\n\n  &&&:hover {\n    background: ${Colors.backgroundLighter()};\n  }\n`;\n"],"names":["Page","styled","div","withConfig","PageHeader","props","title","tags","right","tabs","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsxs","PageHeaderContainer","background","Colors","padding","top","left","border","Box","flex","direction","justifyContent","bottom","alignItems","gap","wrap","reducer","state","action","copy","Set","Array","from","checkedIds","type","payload","checked","id","add","delete","lastCheckedId","allIds","indexOfLast","indexOf","indexOfChecked","_sort","_swc_helpers_sliced_to_array__WEBPACK_IMPORTED_MODULE_1__","_","sort","start","end","slice","forEach","initialState","useSelectionReducer","useReducer","dispatch","onToggleFactory","values","shiftKey","onToggleAll","renderItemAssetKey","assetKey","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Link","to","assetDetailsPathForKey","style","display","width","MiddleTruncate","text","displayNameForAssetKey","renderItemAssetCheck","assetCheck","assetDetailsPathForAssetCheck","labelForAssetCheck","check","name","concat","useShowMoreDialog","dialogTitle","items","renderItem","React","showMore","setShowMore","dialog","length","Dialog","onClose","minWidth","maxWidth","maxHeight","isOpen","height","overflow","VirtualizedItemListForDialog","DialogFooter","topBorder","Button","intent","autoFocus","onClick","undefined","AssetKeyTagCollection","assetKeys","useTags","_props_dialogTitle","span","marginBottom","TagActionsPopover","data","key","value","actions","label","view","lineageScope","Tag","interactive","icon","Icon","color","size","globalAssetGraphPathForAssetsAndDescendants","ButtonLink","underline","AssetCheckTagCollection","assetChecks","CreatedByTagCell","memo","param","repoAddress","onAddTag","CreatedByTag","pluckTagFromList","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","tag","DagsterTag","User","ScheduleName","SensorName","err","return","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","Automaterialize","CreatedBy","AutoObserve","UserDisplay","useLaunchPadHooks","plucked","tagElement","buildTagElement","email","workspacePathFromAddress","token","refineToError","deletePipelineRun","__typename","initializeState","frozenRuns","step","deletion","completed","errors","deletionDialogReducer","prevState","_swc_helpers_object_spread_props__WEBPACK_IMPORTED_MODULE_4__","_swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_5__","deletion1","_swc_helpers_define_property__WEBPACK_IMPORTED_MODULE_6__","error","DeletionDialog","onComplete","onTerminateInstead","selectedRuns","useRef","current","runIDs","Object","keys","count","terminatableCount","filter","useEffect","destroy","useMutation","DELETE_MUTATION","mutate","_swc_helpers_async_to_generator__WEBPACK_IMPORTED_MODULE_9__","runList","runId","variables","_state","sent","canQuicklyClose","canEscapeKeyClose","canOutsideClickClose","DialogBody","Group","spacing","progressContent","Fragment","strong","ProgressBar","Math","max","animate","NavigationBlock","message","completionContent","errorCount","successCount","ul","map","li","Mono","buttons","disabled","RunConfigDialog","copyConfig","runConfigYaml","mode","isJob","hasTags","minHeight","horizontal","Subheading","RunTags","CodeMirrorContainer","StyledRawCodeMirror","options","readOnly","lineNumbers","theme","launchPipelineReexecution","errorText","reexecution","reexecutionDialogReducer","_object_spread_props","_object_spread","reexecution1","_define_property","ReexecutionDialog","reexecutionStrategy","reexecute","LAUNCH_PIPELINE_REEXECUTION_MUTATION","_async_to_generator","reexecutionParams","parentRunId","strategy","jsx_runtime","ReexecutionStrategy","ALL_STEPS","RunActionsMenu","run","additionalActionsForRun","refetch","RunsQueryRefetchContext","visibleDialog","setVisibleDialog","rootServerURI","AppContext","useCopyToClipboard","onCopy","showSharedToaster","useJobReexecution","onCompleted","useLazyQuery","PIPELINE_ENVIRONMENT_QUERY","loadEnv","called","loading","closeDialogs","pipelineRun","pipelineRunOrError","repoMatch","useRepositoryForRunWithParentSnapshot","jobError","useJobAvailabilityErrorForRun","parentPipelineSnapshotId","isFinished","doneStatuses","has","status","isThisThingAJob","match","pipelineName","infoReady","reexecutionDisabledState","hasReExecutePermission","tooltip","DEFAULT_DISABLED_REASON","jobLink","workspacePipelineLinkForRun","repositoryName","repository","repositoryLocationName","repositoryLocation","JoinedButtons","AnchorButton","Popover","content","Menu","MenuItem","tagName","SlashShortcut","pipelineSnapshotId","LinkNoUnderline","getPipelineSnapshotLink","MenuDivider","Tooltip","disabledReason","OPEN_LAUNCHPAD_UNKNOWN","position","targetTagName","MenuLink","canShow","hasTerminatePermission","MenuExternalLink","download","href","hasDeletePermission","onOpening","TerminationDialog","canTerminate","RunBulkActionsMenu","selected","clearSelection","canTerminateAny","some","canDeleteAny","canReexecuteAny","terminatableRuns","r","terminateableIDs","terminateableMap","reduce","accum","deleteableIDs","deletionMap","reexecuteFromFailureRuns","failedStatuses","reexecuteFromFailureMap","reexecutableRuns","reexecutableMap","rightIcon","FROM_FAILURE","gql","validateIsArray","isArray","isUnpinnedByDefaultSystemTag","startsWith","Namespace","Partition","Backfill","toggleTag","tagsArr","tagKey","_to_consumable_array","RunRow","useStateWithStorage","pinnedSystemTags","setPinnedSystemTags","unpinnedTags","setUnpinnedTags","onToggleTagPin","hasCheckboxColumn","canTerminateOrDelete","onToggleChecked","additionalColumns","isHighlighted","hideCreatedBy","repo","useRepositoryForRunWithoutSnapshot","useTagPinning","useCallback","isTagPinned","pipelinesAndJobs","pipelines","find","pipelineOrJob","repoAddressGuess","buildRepoAddress","allTagsWithPinned","allTags","push","pinned","isReexecution","ParentRunId","showRunTags","setShowRunTags","isHovered","setIsHovered","tagsToShow","targetBackfill","tagKeys","link","assetSelection","runsPathWithFilters","Row","highlighted","onMouseEnter","onMouseLeave","td","Checkbox","onChange","e","target","HTMLInputElement","nativeEvent","MouseEvent","getModifierState","titleForRun","RunTime","RunTargetLink","RunTagsWrapper","Caption","margin","ShortcutHandler","onShortcut","shortcutLabel","shortcutFilter","code","RunStatusTagWithStats","RunStateSummary","tr","isHiddenAssetGroupJob","assetKeysForRun","assetCheckSelection","PipelineReference","showIcon","pipelineHrefContext","RunTable","runs","highlightedIds","actionBarComponents","belowActionBarComponents","emptyState","canTerminateOrDeleteAny","selectedFragments","ActionBar","grow","Table","thead","th","paddingTop","paddingBottom","indeterminate","TargetHeader","additionalColumnHeaders","tbody","additionalColumnsForRow","includes","anyFilter","vertical","NonIdealState","description","RUN_TAGS_FRAGMENT","RUN_TABLE_RUN_FRAGMENT","RUN_TIME_FRAGMENT","hideTabPinningNux","setHideTabPinningNux","ProductTour","ProductTourPosition","BOTTOM_RIGHT","video","dismiss","ref","children","outlined","rest","buildColorSet","fillColor","fillColorHover","textColor","iconColor","strokeColor","strokeColorHover","StyledButton","as","$fillColor","$fillColorHover","$strokeColor","$strokeColorHover","$textColor","$iconColor","StyledButtonText","displayName","StyledMenuLink","iconWithColor","IconWrapper"],"sourceRoot":""}